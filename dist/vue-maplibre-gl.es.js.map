{"version":3,"file":"vue-maplibre-gl.es.js","sources":["../src/lib/types.ts","../src/lib/defaults.ts","../src/lib/lib/map.lib.ts","../src/lib/components/controls/position.enum.ts","../src/lib/lib/mapRegistry.ts","../src/lib/lib/debounce.ts","../node_modules/modular-maptiler-sdk/src/language.ts","../src/lib/components/map.component.ts","../src/lib/composable/usePositionWatcher.ts","../src/lib/components/controls/attribution.control.ts","../src/lib/components/controls/custom.control.ts","../src/lib/components/controls/fullscreen.control.ts","../src/lib/components/controls/frameRate.control.ts","../src/lib/components/controls/geolocation.control.ts","../src/lib/components/controls/navigation.control.ts","../src/lib/components/controls/scale.control.ts","../src/lib/components/button.component.ts","../src/lib/components/controls/styleSwitch.control.ts","../src/lib/components/marker.component.ts","../src/lib/components/popup.component.ts","../src/lib/lib/sourceLayer.registry.ts","../src/lib/lib/source.lib.ts","../src/lib/composable/useSource.ts","../src/lib/components/sources/canvas.source.ts","../src/lib/components/sources/geojson.source.ts","../src/lib/components/sources/image.source.ts","../src/lib/components/sources/raster.source.ts","../src/lib/components/sources/rasterDem.source.ts","../src/lib/components/sources/vector.source.ts","../src/lib/components/sources/video.source.ts","../src/lib/lib/layer.lib.ts","../src/lib/composable/useDisposableLayer.ts","../src/lib/components/layers/background.layer.ts","../src/lib/components/layers/circle.layer.ts","../src/lib/components/layers/fill.layer.ts","../src/lib/components/layers/fillExtrusion.layer.ts","../src/lib/components/layers/heatmap.layer.ts","../src/lib/components/layers/hillshade.layer.ts","../src/lib/components/layers/line.layer.ts","../src/lib/components/layers/raster.layer.ts","../src/lib/components/layers/smybol.layer.ts","../src/lib/main.ts"],"sourcesContent":["import { InjectionKey, Ref, ShallowRef } from 'vue';\nimport { Map, Marker, SourceSpecification, StyleSpecification } from 'maplibre-gl';\nimport { MglMap } from '@/lib/components';\nimport { Emitter } from 'mitt';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\n\nexport const mapSymbol          = Symbol('map') as InjectionKey<ShallowRef<Map | undefined>>,\n            isLoadedSymbol      = Symbol('isLoaded') as InjectionKey<Ref<boolean>>,\n            isInitializedSymbol = Symbol('isInitialized') as InjectionKey<Ref<boolean>>,\n            componentIdSymbol   = Symbol('componentId') as InjectionKey<number>,\n            sourceIdSymbol      = Symbol('sourceId') as InjectionKey<string>,\n            sourceLayerRegistry = Symbol('sourceLayerRegistry') as InjectionKey<SourceLayerRegistry>,\n            emitterSymbol       = Symbol('emitter') as InjectionKey<Emitter<MglEvents>>,\n            markerSymbol        = Symbol('marker') as InjectionKey<ShallowRef<Marker | undefined>>;\n\nexport interface MglEvent<T = any> {\n\ttype: string;\n\tcomponent: InstanceType<typeof MglMap>;\n\tmap: Map;\n\tevent: T;\n}\n\nexport type MglEvents = {\n\tstyleSwitched: StyleSwitchItem;\n}\n\nexport interface StyleSwitchItem {\n\tname: string;\n\tlabel: string;\n\ticon?: {\n\t\tpath: string;\n\t};\n\tstyle: StyleSpecification | string;\n}\n\nexport type AllProps<T extends object> = { [K in keyof T]: undefined };\n\n// only proper way to ensure all possible option to track option changes by type system\nexport function AllOptions<T extends object>(obj: AllProps<Required<T>>) {\n\treturn Object.keys(obj) as Array<keyof T>;\n}\n\nexport function AllSourceOptions<T = SourceSpecification>(obj: AllProps<Required<Omit<T, 'type'>>>) {\n\treturn Object.keys(obj) as Array<keyof T>;\n}\n\nexport type ValidLanguages =\n\t'sq'\n\t| 'am'\n\t| 'ar'\n\t| 'hy'\n\t| 'az'\n\t| 'eu'\n\t| 'be'\n\t| 'bs'\n\t| 'br'\n\t| 'bg'\n\t| 'ca'\n\t| 'zh'\n\t| 'co'\n\t| 'hr'\n\t| 'cs'\n\t| 'da'\n\t| 'nl'\n\t| 'en'\n\t| 'eo'\n\t| 'et'\n\t| 'fi'\n\t| 'fr'\n\t| 'fy'\n\t| 'ka'\n\t| 'de'\n\t| 'el'\n\t| 'he'\n\t| 'hi'\n\t| 'hu'\n\t| 'is'\n\t| 'id'\n\t| 'ga'\n\t| 'it'\n\t| 'ja'\n\t| 'ja-Hira'\n\t| 'ja_kana'\n\t| 'ja_rm'\n\t| 'ja-Latn'\n\t| 'kn'\n\t| 'kk'\n\t| 'ko'\n\t| 'ko-Latn'\n\t| 'ku'\n\t| 'la'\n\t| 'lv'\n\t| 'lt'\n\t| 'lb'\n\t| 'mk'\n\t| 'ml'\n\t| 'mt'\n\t| 'no'\n\t| 'oc'\n\t| 'pl'\n\t| 'pt'\n\t| 'ro'\n\t| 'rm'\n\t| 'ru'\n\t| 'gd'\n\t| 'sr'\n\t| 'sr-Latn'\n\t| 'sk'\n\t| 'sl'\n\t| 'es'\n\t| 'sv'\n\t| 'ta'\n\t| 'te'\n\t| 'th'\n\t| 'tr'\n\t| 'uk'\n\t| 'cy'\n","import { LngLatLike, MapOptions as MaplibreMapOptions } from 'maplibre-gl';\nimport { reactive } from 'vue';\nimport { ValidLanguages } from '@/lib/types';\n\nexport type MapOptions = Omit<MaplibreMapOptions, 'container' | 'style'> & { style: object | string, language?: ValidLanguages };\n\nexport const defaults = reactive<MapOptions>({\n\tstyle      : 'https://demotiles.maplibre.org/style.json',\n\tcenter     : Object.freeze([ 0, 0 ]) as LngLatLike,\n\tzoom       : 1,\n\ttrackResize: false\n});\n","import { Map, MapOptions, MarkerOptions, PopupOptions } from 'maplibre-gl';\nimport { MglMap } from '@/lib/components';\nimport { MglEvent } from '@/lib/types';\n\nexport type MapEventHandler = (e: any) => void;\n\nexport class MapLib {\n\n\tstatic readonly MAP_OPTION_KEYS: Array<keyof MapOptions | 'mapStyle'> = [\n\t\t'antialias', 'attributionControl', 'bearing', 'bearingSnap', 'bounds', 'boxZoom', 'center', 'clickTolerance', 'collectResourceTiming',\n\t\t'crossSourceCollisions', 'container', 'customAttribution', 'dragPan', 'dragRotate', 'doubleClickZoom', 'hash', 'fadeDuration',\n\t\t'failIfMajorPerformanceCaveat', 'fitBoundsOptions', 'interactive', 'keyboard', 'locale', 'localIdeographFontFamily', 'logoPosition', 'maxBounds',\n\t\t'maxPitch', 'maxZoom', 'minPitch', 'minZoom', 'preserveDrawingBuffer', 'pitch', 'pitchWithRotate', 'refreshExpiredTiles', 'renderWorldCopies',\n\t\t'scrollZoom', 'mapStyle', 'trackResize', 'transformRequest', 'touchZoomRotate', 'touchPitch', 'zoom', 'maxTileCacheSize', 'pixelRatio',\n\t\t'cooperativeGestures'\n\t];\n\n\tstatic readonly MARKER_OPTION_KEYS: Array<keyof MarkerOptions> = [\n\t\t'element', 'offset', 'anchor', 'color', 'draggable', 'clickTolerance', 'rotation', 'rotationAlignment', 'pitchAlignment', 'scale'\n\t];\n\n\tstatic readonly POPUP_OPTION_KEYS: Array<keyof PopupOptions> = [\n          'closeButton', 'closeOnClick', 'closeOnMove', 'focusAfterOpen', 'anchor', 'offset', 'className', 'maxWidth'\n\t];\n\n\tstatic readonly MAP_EVENT_TYPES = [\n\t\t'error', 'load', 'idle', 'remove', 'render', 'resize', 'webglcontextlost', 'webglcontextrestored', 'dataloading', 'data', 'tiledataloading',\n\t\t'sourcedataloading', 'styledataloading', 'sourcedata', 'styledata', 'boxzoomcancel', 'boxzoomstart', 'boxzoomend', 'touchcancel', 'touchmove',\n\t\t'touchend', 'touchstart', 'click', 'contextmenu', 'dblclick', 'mousemove', 'mouseup', 'mousedown', 'mouseout', 'mouseover', 'movestart', 'move',\n\t\t'moveend', 'zoomstart', 'zoom', 'zoomend', 'rotatestart', 'rotate', 'rotateend', 'dragstart', 'drag', 'dragend', 'pitchstart', 'pitch', 'pitchend',\n\t\t'wheel'\n\t];\n\n\tstatic createEventHandler(component: InstanceType<typeof MglMap>, map: Map, ctx: {\n\t\temit: (t: string, payload: any) => void\n\t}, eventName: string): MapEventHandler {\n\t\treturn (payload = {}) => ctx.emit(eventName, { type: payload.type, map, component, event: payload } as MglEvent);\n\t}\n\n}\n","export enum Position {\n\tTOP_LEFT     = 'top-left',\n\tTOP_RIGHT    = 'top-right',\n\tBOTTOM_LEFT  = 'bottom-left',\n\tBOTTOM_RIGHT = 'bottom-right'\n}\n\nexport const PositionValues = Object.values(Position);\n\nexport type PositionProp = Position | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n","import { MglMap } from '@/lib/components';\nimport maplibregl from 'maplibre-gl';\nimport { reactive, ShallowRef } from 'vue';\nimport { ValidLanguages } from '@/lib/types';\n\nexport interface MapInstance {\n\tcomponent?: InstanceType<typeof MglMap>;\n\tmap?: maplibregl.Map;\n\tisMounted: boolean;\n\tisLoaded: boolean;\n\tlanguage: ValidLanguages | null;\n}\n\nconst instances  = new Map<symbol | string, MapInstance>(),\n\t  defaultKey = Symbol('default');\n\n// useMap returns reactive version of MapInstance\nexport function useMap(key: symbol | string = defaultKey): MapInstance {\n\tlet component = instances.get(key);\n\tif (!component) {\n\t\tcomponent = reactive({ isLoaded: false, isMounted: false, language: null });\n\t\tinstances.set(key, component);\n\t}\n\treturn component;\n}\n\nexport function registerMap(instance: InstanceType<typeof MglMap>, map: ShallowRef<maplibregl.Map | undefined>, key: symbol | string = defaultKey): MapInstance {\n\tlet component = instances.get(key);\n\tif (!component) {\n\t\tcomponent = reactive({ isLoaded: false, isMounted: false, language: null });\n\t\tinstances.set(key, component);\n\t}\n\n\tcomponent.isLoaded  = false;\n\tcomponent.isMounted = false;\n\tcomponent.component = instance;\n\tcomponent.map       = map.value;\n\tcomponent.isLoaded  = map.value?.loaded() || false;\n\n\treturn component;\n}\n","export function debounce(fn: Function, wait = 250, immediate = false) {\n\tlet timeout: number | undefined;\n\n\tfunction debounced(/* ...args */) {\n\t\tconst args = arguments;\n\n\t\tconst later = () => {\n\t\t\ttimeout = undefined;\n\t\t\tif (immediate !== true) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfn.apply(this, args);\n\t\t\t}\n\t\t};\n\n\t\tclearTimeout(timeout!);\n\t\tif (immediate === true && timeout === undefined) {\n\t\t\t// @ts-ignore\n\t\t\tfn.apply(this, args);\n\t\t}\n\t\ttimeout = window.setTimeout(later, wait);\n\t}\n\n\tdebounced.cancel = () => {\n\t\tclearTimeout(timeout!);\n\t};\n\n\treturn debounced;\n}\n","import type { Map, SymbolLayerSpecification } from \"maplibre-gl\";\n\n/**\n * Languages. Note that not all the languages of this list are available but the compatibility list may be expanded in the future.\n */\nconst Language = {\n  /**\n   * AUTO mode uses the language of the browser\n   */\n  AUTO: \"auto\",\n\n  /**\n   * STYLE is a custom flag to keep the language of the map as defined into the style.\n   * If STYLE is set in the constructor, then further modification of the language\n   * with `.setLanguage()` is not possible.\n   */\n  STYLE_LOCK: \"style_lock\",\n\n  /**\n   * Default fallback languages that uses latin charaters\n   */\n  LATIN: \"latin\",\n\n  /**\n   * Default fallback languages that uses non-latin charaters\n   */\n  NON_LATIN: \"nonlatin\",\n\n  /**\n   * Labels are in their local language, when available\n   */\n  LOCAL: \"\",\n\n  ALBANIAN: \"sq\",\n  AMHARIC: \"am\",\n  ARABIC: \"ar\",\n  ARMENIAN: \"hy\",\n  AZERBAIJANI: \"az\",\n  BASQUE: \"eu\",\n  BELORUSSIAN: \"be\",\n  BOSNIAN: \"bs\",\n  BRETON: \"br\",\n  BULGARIAN: \"bg\",\n  CATALAN: \"ca\",\n  CHINESE: \"zh\",\n  CORSICAN: \"co\",\n  CROATIAN: \"hr\",\n  CZECH: \"cs\",\n  DANISH: \"da\",\n  DUTCH: \"nl\",\n  ENGLISH: \"en\",\n  ESPERANTO: \"eo\",\n  ESTONIAN: \"et\",\n  FINNISH: \"fi\",\n  FRENCH: \"fr\",\n  FRISIAN: \"fy\",\n  GEORGIAN: \"ka\",\n  GERMAN: \"de\",\n  GREEK: \"el\",\n  HEBREW: \"he\",\n  HINDI: \"hi\",\n  HUNGARIAN: \"hu\",\n  ICELANDIC: \"is\",\n  INDONESIAN: \"id\",\n  IRISH: \"ga\",\n  ITALIAN: \"it\",\n  JAPANESE: \"ja\",\n  JAPANESE_HIRAGANA: \"ja-Hira\",\n  JAPANESE_KANA: \"ja_kana\",\n  JAPANESE_LATIN: \"ja_rm\",\n  JAPANESE_2018: \"ja-Latn\",\n  KANNADA: \"kn\",\n  KAZAKH: \"kk\",\n  KOREAN: \"ko\",\n  KOREAN_LATIN: \"ko-Latn\",\n  KURDISH: \"ku\",\n  ROMAN_LATIN: \"la\",\n  LATVIAN: \"lv\",\n  LITHUANIAN: \"lt\",\n  LUXEMBOURGISH: \"lb\",\n  MACEDONIAN: \"mk\",\n  MALAYALAM: \"ml\",\n  MALTESE: \"mt\",\n  NORWEGIAN: \"no\",\n  OCCITAN: \"oc\",\n  POLISH: \"pl\",\n  PORTUGUESE: \"pt\",\n  ROMANIAN: \"ro\",\n  ROMANSH: \"rm\",\n  RUSSIAN: \"ru\",\n  SCOTTISH_GAELIC: \"gd\",\n  SERBIAN_CYRILLIC: \"sr\",\n  SERBIAN_LATIN: \"sr-Latn\",\n  SLOVAK: \"sk\",\n  SLOVENE: \"sl\",\n  SPANISH: \"es\",\n  SWEDISH: \"sv\",\n  TAMIL: \"ta\",\n  TELUGU: \"te\",\n  THAI: \"th\",\n  TURKISH: \"tr\",\n  UKRAINIAN: \"uk\",\n  WELSH: \"cy\",\n} as const;\n\nconst languagesIsoSet = new Set(Object.values(Language) as Array<string>);\n\nfunction isLanguageSupported(lang: string): boolean {\n  return languagesIsoSet.has(lang);\n}\n\nconst languageCodeSet = new Set(Object.values(Language));\n\n/**\n * Type representing the key of the Language object\n */\ntype LanguageKey = keyof typeof Language;\n\ntype Values<T> = T[keyof T];\n\n/**\n * Built-in languages values as strings\n */\ntype LanguageString = Values<typeof Language>;\n\nfunction getBrowserLanguage(): LanguageString {\n  if (typeof navigator === \"undefined\") {\n    return Intl.DateTimeFormat()\n      .resolvedOptions()\n      .locale.split(\"-\")[0] as LanguageString;\n  }\n\n  const canditatelangs = Array.from(\n    new Set(navigator.languages.map((l) => l.split(\"-\")[0]))\n  ).filter((l) => languageCodeSet.has(l as LanguageString));\n\n  return canditatelangs.length\n    ? (canditatelangs[0] as LanguageString)\n    : Language.LATIN;\n}\n\nfunction setPrimaryLanguage(map: Map, lang: string) {\n  const layers = map.getStyle().layers;\n\n  // detects pattern like \"{name:somelanguage}\" with loose spacing\n  const strLanguageRegex = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  // detects pattern like \"name:somelanguage\" with loose spacing\n  const strLanguageInArrayRegex = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/;\n\n  // for string based bilingual lang such as \"{name:latin}  {name:nonlatin}\" or \"{name:latin}  {name}\"\n  const strBilingualRegex =\n    /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  // Regex to capture when there are more info, such as mountains elevation with unit m/ft\n  const strMoreInfoRegex = /^(.*)({\\s*name\\s*(:\\s*(\\S*))?\\s*})(.*)$/;\n\n  const langStr = lang ? `name:${lang}` : \"name\"; // to handle local lang\n  const replacer = [\n    \"case\",\n    [\"has\", langStr],\n    [\"get\", langStr],\n    [\"get\", \"name\"],\n  ];\n\n  for (let i = 0; i < layers.length; i += 1) {\n    const layer = layers[i] as SymbolLayerSpecification;\n    const layout = layer.layout;\n\n    if (!layout) {\n      continue;\n    }\n\n    if (!layout[\"text-field\"]) {\n      continue;\n    }\n\n    const textFieldLayoutProp = map.getLayoutProperty(layer.id, \"text-field\");\n\n    // Note:\n    // The value of the 'text-field' property can take multiple shape;\n    // 1. can be an array with 'concat' on its first element (most likely means bilingual)\n    // 2. can be an array with 'get' on its first element (monolingual)\n    // 3. can be a string of shape '{name:latin}'\n    // 4. can be a string referencing another prop such as '{housenumber}' or '{ref}'\n    //\n    // The case 1, 2 and 3 will be updated while maintaining their original type and shape.\n    // The case 3 will not be updated\n\n    let regexMatch;\n\n    // This is case 1\n    if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length >= 2 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"concat\"\n    ) {\n      const newProp = textFieldLayoutProp.slice(); // newProp is Array\n      // The style could possibly have defined more than 2 concatenated language strings but we only want to edit the first\n      // The style could also define that there are more things being concatenated and not only languages\n\n      for (let j = 0; j < textFieldLayoutProp.length; j += 1) {\n        const elem = textFieldLayoutProp[j];\n\n        // we are looking for an elem of shape '{name:somelangage}' (string) of `[\"get\", \"name:somelanguage\"]` (array)\n\n        // the entry of of shape '{name:somelangage}', possibly with loose spacing\n        if (\n          (typeof elem === \"string\" || elem instanceof String) &&\n          strLanguageRegex.exec(elem.toString())\n        ) {\n          newProp[j] = replacer;\n          break; // we just want to update the primary language\n        }\n        // the entry is of an array of shape `[\"get\", \"name:somelanguage\"]`\n        else if (\n          Array.isArray(elem) &&\n          elem.length >= 2 &&\n          elem[0].trim().toLowerCase() === \"get\" &&\n          strLanguageInArrayRegex.exec(elem[1].toString())\n        ) {\n          newProp[j] = replacer;\n          break; // we just want to update the primary language\n        } else if (\n          Array.isArray(elem) &&\n          elem.length === 4 &&\n          elem[0].trim().toLowerCase() === \"case\"\n        ) {\n          newProp[j] = replacer;\n          break; // we just want to update the primary language\n        }\n      }\n\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n\n    // This is case 2\n    else if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length >= 2 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"get\" &&\n      strLanguageInArrayRegex.exec(textFieldLayoutProp[1].toString())\n    ) {\n      const newProp = replacer;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n\n    // This is case 3\n    else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      strLanguageRegex.exec(textFieldLayoutProp.toString())\n    ) {\n      const newProp = replacer;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    } else if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length === 4 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"case\"\n    ) {\n      const newProp = replacer;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    } else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      (regexMatch = strBilingualRegex.exec(textFieldLayoutProp.toString())) !==\n        null\n    ) {\n      const newProp = `{${langStr}}${regexMatch[3]}{name${\n        regexMatch[4] || \"\"\n      }}`;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    } else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      (regexMatch = strMoreInfoRegex.exec(textFieldLayoutProp.toString())) !==\n        null\n    ) {\n      const newProp = `${regexMatch[1]}{${langStr}}${regexMatch[5]}`;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n  }\n}\n\nfunction setSecondaryLanguage(map: Map, lang: string) {\n  const layers = map.getStyle().layers;\n\n  // detects pattern like \"{name:somelanguage}\" with loose spacing\n  const strLanguageRegex = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  // detects pattern like \"name:somelanguage\" with loose spacing\n  const strLanguageInArrayRegex = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/;\n\n  // for string based bilingual lang such as \"{name:latin}  {name:nonlatin}\" or \"{name:latin}  {name}\"\n  const strBilingualRegex =\n    /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  let regexMatch;\n\n  for (let i = 0; i < layers.length; i += 1) {\n    const layer = layers[i] as SymbolLayerSpecification;\n    const layout = layer.layout;\n\n    if (!layout) {\n      continue;\n    }\n\n    if (!layout[\"text-field\"]) {\n      continue;\n    }\n\n    const textFieldLayoutProp = map.getLayoutProperty(layer.id, \"text-field\");\n\n    let newProp;\n\n    // Note:\n    // The value of the 'text-field' property can take multiple shape;\n    // 1. can be an array with 'concat' on its first element (most likely means bilingual)\n    // 2. can be an array with 'get' on its first element (monolingual)\n    // 3. can be a string of shape '{name:latin}'\n    // 4. can be a string referencing another prop such as '{housenumber}' or '{ref}'\n    //\n    // Only the case 1 will be updated because we don't want to change the styling (read: add a secondary language where the original styling is only displaying 1)\n\n    // This is case 1\n    if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length >= 2 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"concat\"\n    ) {\n      newProp = textFieldLayoutProp.slice(); // newProp is Array\n      // The style could possibly have defined more than 2 concatenated language strings but we only want to edit the first\n      // The style could also define that there are more things being concatenated and not only languages\n\n      let languagesAlreadyFound = 0;\n\n      for (let j = 0; j < textFieldLayoutProp.length; j += 1) {\n        const elem = textFieldLayoutProp[j];\n\n        // we are looking for an elem of shape '{name:somelangage}' (string) of `[\"get\", \"name:somelanguage\"]` (array)\n\n        // the entry of of shape '{name:somelangage}', possibly with loose spacing\n        if (\n          (typeof elem === \"string\" || elem instanceof String) &&\n          strLanguageRegex.exec(elem.toString())\n        ) {\n          if (languagesAlreadyFound === 1) {\n            newProp[j] = `{name:${lang}}`;\n            break; // we just want to update the secondary language\n          }\n\n          languagesAlreadyFound += 1;\n        }\n        // the entry is of an array of shape `[\"get\", \"name:somelanguage\"]`\n        else if (\n          Array.isArray(elem) &&\n          elem.length >= 2 &&\n          elem[0].trim().toLowerCase() === \"get\" &&\n          strLanguageInArrayRegex.exec(elem[1].toString())\n        ) {\n          if (languagesAlreadyFound === 1) {\n            newProp[j][1] = `name:${lang}`;\n            break; // we just want to update the secondary language\n          }\n\n          languagesAlreadyFound += 1;\n        } else if (\n          Array.isArray(elem) &&\n          elem.length === 4 &&\n          elem[0].trim().toLowerCase() === \"case\"\n        ) {\n          if (languagesAlreadyFound === 1) {\n            newProp[j] = [\"get\", `name:${lang}`]; // the situation with 'case' is supposed to only happen with the primary lang\n            break; // but in case a styling also does that for secondary...\n          }\n\n          languagesAlreadyFound += 1;\n        }\n      }\n\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n\n    // the language (both first and second) are defined into a single string model\n    else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      (regexMatch = strBilingualRegex.exec(textFieldLayoutProp.toString())) !==\n        null\n    ) {\n      const langStr = lang ? `name:${lang}` : \"name\"; // to handle local lang\n      newProp = `{name${regexMatch[1] || \"\"}}${regexMatch[3]}{${langStr}}`;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n  }\n}\n\nexport {\n  Language,\n  getBrowserLanguage,\n  isLanguageSupported,\n  setPrimaryLanguage,\n  setSecondaryLanguage,\n};\n\nexport type { LanguageString, LanguageKey };\n","import {\n\tdefineComponent,\n\tgetCurrentInstance,\n\th,\n\tmarkRaw,\n\tnextTick,\n\tonBeforeUnmount,\n\tonMounted,\n\tPropType,\n\tprovide,\n\tref,\n\tshallowRef,\n\tSlotsType,\n\ttoRef,\n\tunref,\n\twatch\n} from 'vue';\nimport {\n\tFitBoundsOptions,\n\tGestureOptions,\n\tLngLatBoundsLike,\n\tLngLatLike,\n\tMap as MaplibreMap,\n\tMapOptions,\n\tRequestTransformFunction,\n\tStyleSpecification\n} from 'maplibre-gl';\nimport { componentIdSymbol, emitterSymbol, isInitializedSymbol, isLoadedSymbol, mapSymbol, MglEvents, sourceIdSymbol, ValidLanguages } from '@/lib/types';\nimport { defaults } from '@/lib/defaults';\nimport { MapLib } from '@/lib/lib/map.lib';\nimport { Position } from '@/lib/components/controls/position.enum';\nimport mitt from 'mitt';\nimport { registerMap } from '@/lib/lib/mapRegistry';\nimport { debounce } from '@/lib/lib/debounce';\nimport { setPrimaryLanguage } from 'modular-maptiler-sdk/src/language';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglMap',\n\tprops: {\n\t\twidth                       : { type: [ Number, String ] as PropType<number | string>, default: '100%' },\n\t\theight                      : { type: [ Number, String ] as PropType<number | string>, default: '100%' },\n\t\tantialias                   : { type: Boolean as PropType<boolean>, default: () => defaults.antialias },\n\t\tattributionControl          : { type: Boolean as PropType<boolean>, default: () => defaults.attributionControl },\n\t\tbearing                     : { type: Number as PropType<number>, default: () => defaults.bearing },\n\t\tbearingSnap                 : { type: Number as PropType<number>, default: () => defaults.bearingSnap },\n\t\tbounds                      : { type: [ Array, Object ] as PropType<LngLatBoundsLike>, default: () => defaults.bounds },\n\t\tboxZoom                     : { type: Boolean as PropType<boolean>, default: () => defaults.boxZoom },\n\t\tcenter                      : { type: [ Array, Object ] as PropType<LngLatLike>, default: () => defaults.center },\n\t\tclickTolerance              : { type: Number as PropType<number>, default: () => defaults.clickTolerance },\n\t\tcollectResourceTiming       : { type: Boolean as PropType<boolean>, default: () => defaults.collectResourceTiming },\n\t\tcrossSourceCollisions       : { type: Boolean as PropType<boolean>, default: () => defaults.crossSourceCollisions },\n\t\tcustomAttribution           : { type: [ String, Array ] as PropType<string | string[]>, default: () => defaults.customAttribution },\n\t\tdragPan                     : { type: Boolean as PropType<boolean>, default: () => defaults.dragPan },\n\t\tdragRotate                  : { type: Boolean as PropType<boolean>, default: () => defaults.dragRotate },\n\t\tdoubleClickZoom             : { type: Boolean as PropType<boolean>, default: () => defaults.doubleClickZoom },\n\t\thash                        : { type: [ Boolean, String ] as PropType<boolean | string>, default: () => defaults.hash },\n\t\tfadeDuration                : { type: Number as PropType<number>, default: () => defaults.fadeDuration },\n\t\tfailIfMajorPerformanceCaveat: { type: Boolean as PropType<boolean>, default: () => defaults.failIfMajorPerformanceCaveat },\n\t\tfitBoundsOptions            : { type: Object as PropType<FitBoundsOptions>, default: () => defaults.fitBoundsOptions },\n\t\tinteractive                 : { type: Boolean as PropType<boolean>, default: () => defaults.interactive },\n\t\tkeyboard                    : { type: Boolean as PropType<boolean>, default: () => defaults.keyboard },\n\t\tlocale                      : { type: Object as PropType<Record<string, string>>, default: () => defaults.locale },\n\t\tlanguage                    : { type: String as PropType<ValidLanguages | null>, default: () => defaults.language || null },\n\t\tlocalIdeographFontFamily    : { type: String as PropType<string>, default: () => defaults.localIdeographFontFamily },\n\t\tlogoPosition                : {\n\t\t\ttype     : [ String ] as PropType<Position>,\n\t\t\tvalidator: (val: any) => val in Position,\n\t\t\tdefault  : () => defaults.logoPosition,\n\t\t},\n\t\tmaxBounds                   : { type: [ Array, Object ] as PropType<LngLatBoundsLike>, default: () => defaults.maxBounds },\n\t\tmaxPitch                    : { type: Number as PropType<number>, default: () => defaults.maxPitch },\n\t\tmaxZoom                     : { type: Number as PropType<number>, default: () => defaults.maxZoom },\n\t\tminPitch                    : { type: Number as PropType<number>, default: () => defaults.minPitch },\n\t\tminZoom                     : { type: Number as PropType<number>, default: () => defaults.minZoom },\n\t\tpreserveDrawingBuffer       : { type: Boolean as PropType<boolean>, default: () => defaults.preserveDrawingBuffer },\n\t\tpitch                       : { type: Number as PropType<number>, default: () => defaults.pitch },\n\t\tpitchWithRotate             : { type: Boolean as PropType<boolean>, default: () => defaults.pitchWithRotate },\n\t\trefreshExpiredTiles         : { type: Boolean as PropType<boolean>, default: () => defaults.refreshExpiredTiles },\n\t\trenderWorldCopies           : { type: Boolean as PropType<boolean>, default: () => defaults.renderWorldCopies },\n\t\tscrollZoom                  : { type: Boolean as PropType<boolean>, default: () => defaults.scrollZoom },\n\t\t// StyleSpecification triggers TS7056, so users must handle typings themselves\n\t\tmapStyle           : { type: [ String, Object ] as PropType<object | string>, default: () => defaults.style },\n\t\ttrackResize        : { type: Boolean as PropType<boolean>, default: () => defaults.trackResize },\n\t\ttransformRequest   : { type: Function as PropType<RequestTransformFunction>, default: defaults.transformRequest },\n\t\ttouchZoomRotate    : { type: Boolean as PropType<boolean>, default: () => defaults.touchZoomRotate },\n\t\ttouchPitch         : { type: Boolean as PropType<boolean>, default: () => defaults.touchPitch },\n\t\tzoom               : { type: Number as PropType<number>, default: () => defaults.zoom },\n\t\tmaxTileCacheSize   : { type: Number as PropType<number>, default: () => defaults.maxTileCacheSize },\n\t\tmapKey             : { type: [ String, Symbol ] as PropType<string | symbol> },\n\t\tpixelRatio         : { type: Number as PropType<number>, default: () => defaults.pixelRatio },\n\t\tcooperativeGestures: { type: [ Boolean, Object ] as PropType<boolean | GestureOptions>, default: () => defaults.cooperativeGestures }\n\t},\n\temits: [\n\t\t'map:error', 'map:load', 'map:idle', 'map:remove', 'map:render', 'map:resize', 'map:webglcontextlost', 'map:webglcontextrestored', 'map:dataloading',\n\t\t'map:data', 'map:tiledataloading', 'map:sourcedataloading', 'map:styledataloading', 'map:sourcedata', 'map:styledata', 'map:boxzoomcancel',\n\t\t'map:boxzoomstart', 'map:boxzoomend', 'map:touchcancel', 'map:touchmove', 'map:touchend', 'map:touchstart', 'map:click', 'map:contextmenu',\n\t\t'map:dblclick', 'map:mousemove', 'map:mouseup', 'map:mousedown', 'map:mouseout', 'map:mouseover', 'map:movestart', 'map:move', 'map:moveend',\n\t\t'map:zoomstart', 'map:zoom', 'map:zoomend', 'map:rotatestart', 'map:rotate', 'map:rotateend', 'map:dragstart', 'map:drag', 'map:dragend',\n\t\t'map:pitchstart', 'map:pitch', 'map:pitchend', 'map:wheel'\n\t],\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, ctx) {\n\n\t\tconst component      = markRaw(getCurrentInstance()!),\n\t\t\t  container      = shallowRef<HTMLDivElement>(),\n\t\t\t  map            = shallowRef<MaplibreMap>(),\n\t\t\t  isInitialized  = ref(false),\n\t\t\t  isLoaded       = ref(false),\n\t\t\t  isStyleReady   = ref(false),\n\t\t\t  boundMapEvents = new Map<string, Function>(),\n\t\t\t  emitter        = mitt<MglEvents>(),\n\t\t\t  registryItem   = registerMap(component as any, map, props.mapKey);\n\n\t\tlet resizeObserver: ResizeObserver | undefined;\n\n\t\tprovide(mapSymbol, map);\n\t\tprovide(isLoadedSymbol, isLoaded);\n\t\tprovide(isInitializedSymbol, isInitialized);\n\t\tprovide(componentIdSymbol, component.uid);\n\t\tprovide(sourceIdSymbol, '');\n\t\tprovide(emitterSymbol, emitter);\n\n\t\t/*\n\t\t * bind prop watchers\n\t\t */\n\t\twatch(toRef(props, 'bearing'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setBearing(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'bounds'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.fitBounds(v, props.fitBoundsOptions);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'center'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setCenter(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'maxBounds'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMaxBounds(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'maxPitch'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMaxPitch(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'maxZoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMaxZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'minPitch'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMinPitch(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'minZoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMinZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'pitch'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setPitch(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'renderWorldCopies'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setRenderWorldCopies(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'mapStyle'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setStyle(v as StyleSpecification);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'transformRequest'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setTransformRequest(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'zoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'zoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'language'), v => {\n\t\t\tif (isStyleReady.value && map.value && registryItem.language !== (v || null)) {\n\t\t\t\tsetPrimaryLanguage(map.value as any, v || '');\n\t\t\t\tregistryItem.language = v || null;\n\t\t\t}\n\t\t});\n\t\twatch(toRef(registryItem, 'language'), v => {\n\t\t\tif (isStyleReady.value && map.value) {\n\t\t\t\tsetPrimaryLanguage(map.value as any, v || '');\n\t\t\t}\n\t\t});\n\n\t\tfunction onStyleReady() {\n\t\t\tisStyleReady.value = true;\n\t\t\tif (props.language) {\n\t\t\t\tregistryItem.language = props.language;\n\t\t\t} else if (registryItem.language) {\n\t\t\t\tsetPrimaryLanguage(map.value! as any, props.language || '');\n\t\t\t}\n\t\t}\n\n\t\tfunction initialize() {\n\n\t\t\tregistryItem.isMounted = true;\n\n\t\t\t// build options\n\t\t\tconst opts: MapOptions = Object.keys(props)\n\t\t\t\t\t\t\t\t\t\t   .filter(opt => (props as any)[ opt ] !== undefined && MapLib.MAP_OPTION_KEYS.indexOf(opt as keyof MapOptions) !== -1)\n\t\t\t\t\t\t\t\t\t\t   .reduce<MapOptions>((obj, opt) => {\n\t\t\t\t\t\t\t\t\t\t\t   (obj as any)[ opt === 'mapStyle' ? 'style' : opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t\t\t\t\t\t   return obj;\n\t\t\t\t\t\t\t\t\t\t   }, { container: container.value as HTMLDivElement } as any);\n\n\t\t\t// init map\n\t\t\tmap.value           = markRaw(new MaplibreMap(opts));\n\t\t\tregistryItem.map    = map.value;\n\t\t\tisInitialized.value = true;\n\t\t\tboundMapEvents.set('__load', () => (isLoaded.value = true, registryItem.isLoaded = true));\n\t\t\tmap.value.once('styledata', onStyleReady);\n\t\t\tmap.value.on('load', boundMapEvents.get('__load') as any);\n\n\t\t\t// bind events\n\t\t\tif (component.vnode.props) {\n\t\t\t\tfor (let i = 0, len = MapLib.MAP_EVENT_TYPES.length; i < len; i++) {\n\t\t\t\t\tif (component.vnode.props[ 'onMap:' + MapLib.MAP_EVENT_TYPES[ i ] ]) {\n\t\t\t\t\t\tconst handler = MapLib.createEventHandler(component as any, map.value, ctx as any, 'map:' + MapLib.MAP_EVENT_TYPES[ i ]);\n\t\t\t\t\t\tboundMapEvents.set(MapLib.MAP_EVENT_TYPES[ i ], handler);\n\t\t\t\t\t\tmap.value.on(MapLib.MAP_EVENT_TYPES[ i ], handler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// automatic re-initialization of map on CONTEXT_LOST_WEBGL\n\t\t\tmap.value.getCanvas().addEventListener('webglcontextlost', restart);\n\n\t\t}\n\n\t\tasync function dispose() {\n\n\t\t\tregistryItem.isMounted = false;\n\t\t\tregistryItem.isLoaded  = false;\n\t\t\tisLoaded.value         = false;\n\n\t\t\tif (map.value) {\n\t\t\t\t// unbind events\n\t\t\t\tmap.value.getCanvas().removeEventListener('webglcontextlost', restart);\n\t\t\t\tmap.value._controls.forEach((control) => {\n\t\t\t\t\tmap.value!.removeControl(control);\n\t\t\t\t});\n\t\t\t\tisInitialized.value = false;\n\t\t\t\tboundMapEvents.forEach((func, en) => {\n\t\t\t\t\tmap.value!.off(en.startsWith('__') ? en.substring(2) : en, func as any);\n\t\t\t\t});\n\t\t\t\t// destroy map\n\t\t\t\tmap.value.remove();\n\t\t\t}\n\n\t\t}\n\n\t\tfunction restart() {\n\t\t\tdispose();\n\t\t\tnextTick(initialize);\n\t\t}\n\n\t\t/*\n\t\t * init map\n\t\t */\n\t\tonMounted(() => {\n\n\t\t\tinitialize();\n\n\t\t\t// bind resize observer\n\t\t\tif (map.value) {\n\t\t\t\tresizeObserver = new ResizeObserver(debounce(map.value.resize.bind(map.value), 100));\n\t\t\t\tresizeObserver.observe(container.value as HTMLDivElement);\n\t\t\t}\n\n\t\t});\n\n\t\t/*\n\t\t * Dispose component\n\t\t */\n\t\tonBeforeUnmount(() => {\n\n\t\t\t// unbind resize observer\n\t\t\tif (resizeObserver !== undefined) {\n\t\t\t\tresizeObserver.disconnect();\n\t\t\t\tresizeObserver = undefined;\n\t\t\t}\n\n\t\t\tdispose();\n\n\t\t});\n\n\t\tctx.expose({ map });\n\n\t\treturn () => h(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\t'class': 'mgl-container',\n\t\t\t\tstyle  : { height: props.height, width: props.width }\n\t\t\t},\n\t\t\t[\n\t\t\t\th('div', { ref: container, 'class': 'mgl-wrapper' }),\n\t\t\t\tisInitialized.value && ctx.slots.default ? ctx.slots.default({}) : undefined\n\t\t\t]\n\t\t);\n\n\t}\n});\n","import { WatchSource } from '@vue/runtime-core';\nimport { ShallowRef, watch } from 'vue';\nimport { IControl, Map } from 'maplibre-gl';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\n\nexport function usePositionWatcher(source: WatchSource<PositionProp | undefined>, map: ShallowRef<Map | undefined>, control: IControl) {\n\twatch(source, (v) => {\n\t\tif (v && PositionValues.indexOf(v as Position) === -1) {\n\t\t\treturn;\n\t\t}\n\t\tif (map.value?.hasControl(control)) {\n\t\t\tmap.value.removeControl(control);\n\t\t}\n\t\tmap.value?.addControl(control, v);\n\t}, { immediate: true });\n}","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { AttributionControl } from 'maplibre-gl';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglAttributionControl',\n\tprops: {\n\t\tposition         : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tcompact          : Boolean as PropType<boolean>,\n\t\tcustomAttribution: [ String, Array ] as PropType<string | string[]>\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new AttributionControl({ compact: props.compact, customAttribution: props.customAttribution });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value!.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { createCommentVNode, defineComponent, h, inject, nextTick, onBeforeUnmount, PropType, ref, Ref, SlotsType, Teleport, toRef, watch } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { ControlPosition, IControl } from 'maplibre-gl';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\n\nexport class CustomControl implements IControl {\n\n\tpublic static readonly CONTROL_CLASS       = 'maplibregl-ctrl';\n\tpublic static readonly CONTROL_GROUP_CLASS = 'maplibregl-ctrl-group';\n\n\tpublic readonly container: HTMLDivElement;\n\n\tconstructor(private isAdded: Ref<boolean>, noClasses: boolean) {\n\t\tthis.container = document.createElement('div');\n\t\tthis.setClasses(noClasses);\n\t}\n\n\tgetDefaultPosition(): ControlPosition {\n\t\treturn Position.TOP_LEFT;\n\t}\n\n\tonAdd(): HTMLElement {\n\t\tnextTick(() => this.isAdded.value = true);\n\t\treturn this.container;\n\t}\n\n\tonRemove(): void {\n\t\tthis.isAdded.value = false;\n\t\tthis.container.remove();\n\t}\n\n\tsetClasses(noClasses: boolean) {\n\t\tif (noClasses) {\n\t\t\tthis.container.classList.remove(CustomControl.CONTROL_CLASS);\n\t\t\tthis.container.classList.remove(CustomControl.CONTROL_GROUP_CLASS);\n\t\t} else {\n\t\t\tthis.container.classList.add(CustomControl.CONTROL_CLASS);\n\t\t\tthis.container.classList.add(CustomControl.CONTROL_GROUP_CLASS);\n\t\t}\n\t}\n\n}\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglCustomControl',\n\tprops: {\n\t\tposition : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tnoClasses: {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  isAdded       = ref(false),\n\t\t\t  control       = new CustomControl(isAdded, props.noClasses!);\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\twatch(toRef(props, 'noClasses'), v => control.setClasses(v!));\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t\treturn () => {\n\t\t\tif (!isAdded.value) {\n\t\t\t\treturn createCommentVNode('custom-component');\n\t\t\t}\n\t\t\treturn h(\n\t\t\t\tTeleport as any,\n\t\t\t\t{ to: control.container },\n\t\t\t\tslots.default?.({})\n\t\t\t);\n\t\t};\n\n\t}\n});\n","import { defineComponent, inject, nextTick, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { FullscreenControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFullscreenControl',\n\tprops: {\n\t\tposition : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tdefault  : Position.TOP_RIGHT,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tcontainer: {\n\t\t\ttype   : Object as PropType<HTMLElement>,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new FullscreenControl({ container: props.container || undefined });\n\n\t\t// fire map.resize just a 2nd time\n\t\tfunction triggerResize() {\n\t\t\tnextTick(() => map.value?.resize());\n\t\t}\n\n\t\tcontrol.on('fullscreenstart', triggerResize);\n\t\tcontrol.on('fullscreenend', triggerResize);\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => {\n\t\t\tcontrol.off('fullscreenstart', triggerResize);\n\t\t\tcontrol.off('fullscreenend', triggerResize);\n\t\t\tisInitialized.value && map.value?.removeControl(control);\n\t\t});\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { IControl, Map as MMap } from 'maplibre-gl';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport class FrameRateControl implements IControl {\n\n\tprivate frames      = 0;\n\tprivate totalTime   = 0;\n\tprivate totalFrames = 0;\n\n\tprivate time: number | null = null;\n\tprivate map?: MMap;\n\tprivate container?: HTMLDivElement;\n\tprivate readOutput?: HTMLDivElement;\n\tprivate canvas?: HTMLCanvasElement;\n\n\tprivate eventHandlers = new Map<string, Function>();\n\n\tconstructor(private background  = 'rgba(0,0,0,0.9)',\n\t\t\t\tprivate barWidth    = 4 * window.devicePixelRatio,\n\t\t\t\tprivate color       = '#7cf859',\n\t\t\t\tprivate font        = 'Monaco, Consolas, Courier, monospace',\n\t\t\t\tprivate graphHeight = 60 * window.devicePixelRatio,\n\t\t\t\tprivate graphWidth  = 90 * window.devicePixelRatio,\n\t\t\t\tprivate graphTop    = 0,\n\t\t\t\tprivate graphRight  = 5 * window.devicePixelRatio,\n\t\t\t\tprivate width       = 100 * window.devicePixelRatio) {\n\t}\n\n\tgetDefaultPosition(): Position {\n\t\treturn Position.TOP_RIGHT;\n\t}\n\n\tonAdd(map: MMap): HTMLElement {\n\t\tthis.map = map;\n\n\t\tconst el     = (this.container = document.createElement('div'));\n\t\tel.className = 'maplibregl-ctrl maplibregl-ctrl-fps';\n\n\t\tel.style.backgroundColor = this.background;\n\t\tel.style.borderRadius    = '6px';\n\n\t\tthis.readOutput                  = document.createElement('div');\n\t\tthis.readOutput.style.color      = this.color;\n\t\tthis.readOutput.style.fontFamily = this.font;\n\t\tthis.readOutput.style.padding    = '0 5px 5px';\n\t\tthis.readOutput.style.fontSize   = '9px';\n\t\tthis.readOutput.style.fontWeight = 'bold';\n\t\tthis.readOutput.textContent      = 'Waiting…';\n\n\t\tthis.canvas               = document.createElement('canvas');\n\t\tthis.canvas.className     = 'maplibregl-ctrl-canvas';\n\t\tthis.canvas.width         = this.width;\n\t\tthis.canvas.height        = this.graphHeight;\n\t\tthis.canvas.style.cssText = `width: ${this.width / window.devicePixelRatio}px; height: ${this.graphHeight / window.devicePixelRatio}px;`;\n\n\t\tel.appendChild(this.readOutput);\n\t\tel.appendChild(this.canvas);\n\n\t\tthis.eventHandlers.set('movestart', this.onMoveStart.bind(this));\n\t\tthis.eventHandlers.set('moveend', this.onMoveEnd.bind(this));\n\t\tthis.map.on('movestart', this.eventHandlers.get('movestart') as any);\n\t\tthis.map.on('moveend', this.eventHandlers.get('moveend') as any);\n\t\treturn this.container;\n\t}\n\n\tonRemove(): void {\n\t\tthis.map!.off('movestart', this.eventHandlers.get('movestart') as any);\n\t\tthis.map!.off('moveend', this.eventHandlers.get('moveend') as any);\n\t\tthis.eventHandlers.clear();\n\t\tthis.container!.parentNode!.removeChild(this.container!);\n\t\tthis.map = undefined;\n\t}\n\n\tonMoveStart() {\n\t\tthis.frames = 0;\n\t\tthis.time   = performance.now();\n\t\tthis.eventHandlers.set('render', this.onRender.bind(this));\n\t\tthis.map!.on('render', this.eventHandlers.get('render') as any);\n\t}\n\n\tonMoveEnd() {\n\t\tconst now = performance.now();\n\t\tthis.updateGraph(this.getFPS(now));\n\t\tthis.frames = 0;\n\t\tthis.time   = null;\n\t\tthis.map!.off('render', this.eventHandlers.get('render') as any);\n\t}\n\n\tonRender() {\n\t\tif (this.time) {\n\t\t\tthis.frames++;\n\t\t\tconst now = performance.now();\n\t\t\tif (now >= this.time + 1e3) {\n\t\t\t\tthis.updateGraph(this.getFPS(now));\n\t\t\t\tthis.frames = 0;\n\t\t\t\tthis.time   = performance.now();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFPS(now: number) {\n\t\tthis.totalTime += now - this.time!;\n\t\tthis.totalFrames += this.frames;\n\t\treturn Math.round((1e3 * this.frames) / (now - this.time!)) || 0;\n\t}\n\n\tupdateGraph(fpsNow: number) {\n\t\tconst context = this.canvas!.getContext('2d')!;\n\t\tconst fps     = Math.round((1e3 * this.totalFrames) / this.totalTime) || 0;\n\t\tconst rect    = (this.graphHeight, this.barWidth);\n\n\t\tcontext.fillStyle   = this.background;\n\t\tcontext.globalAlpha = 1;\n\t\tcontext.fillRect(0, 0, this.graphWidth, this.graphTop);\n\t\tcontext.fillStyle = this.color;\n\n\t\tthis.readOutput!.textContent = `${fpsNow} FPS (${fps} Avg)`;\n\t\tcontext.drawImage(\n\t\t\tthis.canvas!,\n\t\t\tthis.graphRight + rect,\n\t\t\tthis.graphTop,\n\t\t\tthis.graphWidth - rect,\n\t\t\tthis.graphHeight,\n\t\t\tthis.graphRight,\n\t\t\tthis.graphTop,\n\t\t\tthis.graphWidth - rect,\n\t\t\tthis.graphHeight\n\t\t);\n\t\tcontext.fillRect(\n\t\t\tthis.graphRight + this.graphWidth - rect,\n\t\t\tthis.graphTop,\n\t\t\trect,\n\t\t\tthis.graphHeight\n\t\t);\n\t\tcontext.fillStyle   = this.background;\n\t\tcontext.globalAlpha = 0.75;\n\t\tcontext.fillRect(\n\t\t\tthis.graphRight + this.graphWidth - rect,\n\t\t\tthis.graphTop,\n\t\t\trect,\n\t\t\t(1 - fpsNow / 100) * this.graphHeight\n\t\t);\n\t}\n\n}\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFrameRateControl',\n\tprops: {\n\t\tposition   : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tbackground : {\n\t\t\ttype   : String as PropType<string>,\n\t\t\tdefault: 'rgba(0,0,0,0.9)'\n\t\t},\n\t\tbarWidth   : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 4 * window.devicePixelRatio\n\t\t},\n\t\tcolor      : {\n\t\t\ttype   : String as PropType<string>,\n\t\t\tdefault: '#7cf859'\n\t\t},\n\t\tfont       : {\n\t\t\ttype   : String as PropType<string>,\n\t\t\tdefault: 'Monaco, Consolas, Courier, monospace'\n\t\t},\n\t\tgraphHeight: {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 60 * window.devicePixelRatio\n\t\t},\n\t\tgraphWidth : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 90 * window.devicePixelRatio\n\t\t},\n\t\tgraphTop   : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 0\n\t\t},\n\t\tgraphRight : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 5 * window.devicePixelRatio\n\t\t},\n\t\twidth      : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 100 * window.devicePixelRatio\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new FrameRateControl(\n\t\t\t\t  props.background,\n\t\t\t\t  props.barWidth,\n\t\t\t\t  props.color,\n\t\t\t\t  props.font,\n\t\t\t\t  props.graphHeight,\n\t\t\t\t  props.graphWidth,\n\t\t\t\t  props.graphTop,\n\t\t\t\t  props.graphRight,\n\t\t\t\t  props.width\n\t\t\t  );\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { FitBoundsOptions, GeolocateControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglGeolocationControl',\n\tprops: {\n\t\tposition          : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tdefault  : Position.TOP_RIGHT,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tpositionOptions   : {\n\t\t\ttype   : Object as PropType<PositionOptions>,\n\t\t\tdefault: { enableHighAccuracy: false, timeout: 6000 } as PositionOptions\n\t\t},\n\t\tfitBoundsOptions  : {\n\t\t\ttype   : Object as PropType<FitBoundsOptions>,\n\t\t\tdefault: { maxZoom: 15 } as FitBoundsOptions\n\t\t},\n\t\ttrackUserLocation : {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: false\n\t\t},\n\t\tshowAccuracyCircle: {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: true\n\t\t},\n\t\tshowUserLocation  : {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: true\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new GeolocateControl({\n\t\t\t\t  positionOptions   : props.positionOptions,\n\t\t\t\t  fitBoundsOptions  : props.fitBoundsOptions,\n\t\t\t\t  trackUserLocation : props.trackUserLocation,\n\t\t\t\t  showAccuracyCircle: props.showAccuracyCircle,\n\t\t\t\t  showUserLocation  : props.showUserLocation\n\t\t\t  });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { NavigationControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglNavigationControl',\n\tprops: {\n\t\tposition      : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tdefault  : Position.TOP_RIGHT,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tshowCompass   : { type: Boolean as PropType<boolean>, default: true },\n\t\tshowZoom      : { type: Boolean as PropType<boolean>, default: true },\n\t\tvisualizePitch: Boolean as PropType<boolean>\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new NavigationControl({ showCompass: props.showCompass, showZoom: props.showZoom, visualizePitch: props.visualizePitch });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { ScaleControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport enum ScaleControlUnit {\n\tIMPERIAL = 'imperial',\n\tMETRIC   = 'metric',\n\tNAUTICAL = 'nautical'\n}\n\ntype UnitValue = ScaleControlUnit | 'imperial' | 'metric' | 'nautical';\nconst UnitValues = Object.values(ScaleControlUnit);\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglScaleControl',\n\tprops: {\n\t\tposition: {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tmaxWidth: { type: Number as PropType<number>, default: 100 },\n\t\tunit    : {\n\t\t\ttype     : String as PropType<UnitValue>,\n\t\t\tdefault  : ScaleControlUnit.METRIC,\n\t\t\tvalidator: (v: ScaleControlUnit) => {\n\t\t\t\treturn UnitValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new ScaleControl({ maxWidth: props.maxWidth, unit: props.unit });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, h, PropType, ref, SlotsType, warn, watch } from 'vue';\n\nexport enum ButtonType {\n\tDEFAULT     = 'default',\n\tTEXT        = 'text',\n\tMDI         = 'mdi',\n\tSIMPLE_ICON = 'simple-icons',\n}\n\nexport const ButtonTypeValues = Object.values(ButtonType);\n\ninterface Default {\n\tsize: number;\n\tviewbox: string;\n}\n\nconst types: { [key in ButtonType]?: Default } = {\n\t[ ButtonType.TEXT ]       : undefined,\n\t[ ButtonType.MDI ]        : {\n\t\tsize   : 21,\n\t\tviewbox: '0 0 24 24'\n\t},\n\t[ ButtonType.SIMPLE_ICON ]: {\n\t\tsize   : 21,\n\t\tviewbox: '0 0 24 24'\n\t},\n\t[ ButtonType.DEFAULT ]    : {\n\t\tsize   : 0,\n\t\tviewbox: '0 0 0 0'\n\t}\n};\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglButton',\n\tprops: {\n\t\ttype   : {\n\t\t\ttype     : String as PropType<ButtonType | 'default' | 'text' | 'mdi' | 'simple-icons'>,\n\t\t\tdefault  : ButtonType.DEFAULT,\n\t\t\tvalidator: (v: ButtonType) => {\n\t\t\t\treturn ButtonTypeValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tpath   : {\n\t\t\ttype: String as PropType<string>\n\t\t},\n\t\tsize   : Number as PropType<number>,\n\t\tviewbox: String as PropType<string>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tif (!props.path && props.type !== ButtonType.TEXT) {\n\t\t\twarn('property `path` must be set on MaplibreButton');\n\t\t}\n\n\t\tconst defaults = ref(types[ props.type ] || types.default);\n\t\twatch(() => props.type, v => defaults.value = types[ v ] || types.default);\n\n\t\treturn () => {\n\t\t\tif (props.type === ButtonType.TEXT) {\n\t\t\t\treturn h('button', { type: 'button' }, slots.default?.({}));\n\t\t\t}\n\t\t\treturn h('button', { type: 'button', 'class': 'maplibregl-ctrl-icon' },\n\t\t\t\t[\n\t\t\t\t\th(\n\t\t\t\t\t\t'svg',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth  : props.size || defaults.value!.size,\n\t\t\t\t\t\t\theight : props.size || defaults.value!.size,\n\t\t\t\t\t\t\tviewBox: props.viewbox || defaults.value!.viewbox\n\t\t\t\t\t\t},\n\t\t\t\t\t\th('path', { fill: 'currentColor', d: props.path })\n\t\t\t\t\t),\n\t\t\t\t\tslots.default?.({})\n\t\t\t\t]\n\t\t\t);\n\t\t};\n\n\t}\n});\n","import {\n\tcreateCommentVNode,\n\tcreateTextVNode,\n\tdefineComponent,\n\th,\n\tinject,\n\tonBeforeUnmount,\n\tPropType,\n\tRef,\n\tref,\n\tshallowRef,\n\tSlotsType,\n\tTeleport,\n\ttoRef,\n\twatch\n} from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { emitterSymbol, isInitializedSymbol, isLoadedSymbol, mapSymbol, StyleSwitchItem } from '@/lib/types';\nimport { CustomControl } from '@/lib/components/controls/custom.control';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\nimport { MglButton } from '@/lib/components';\nimport { ButtonType } from '@/lib/components/button.component';\n\nfunction isEvent(e: any): e is Event {\n\treturn e && !!(e as Event).stopPropagation;\n}\n\ninterface SlotProps {\n\tisOpen: Ref<boolean>,\n\ttoggleOpen: (forceIsOpen?: boolean | Event, e?: Event) => void,\n\tsetStyle: (s: StyleSwitchItem) => void,\n\tmapStyles: StyleSwitchItem[],\n\tcurrentStyle: Ref<StyleSwitchItem | null>,\n}\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglStyleSwitchControl',\n\tprops: {\n\t\tposition  : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tmapStyles : {\n\t\t\ttype    : Array as PropType<StyleSwitchItem[]>,\n\t\t\trequired: true,\n\t\t\tdefault : []\n\t\t},\n\t\tmodelValue: {\n\t\t\ttype: Object as PropType<StyleSwitchItem>\n\t\t},\n\t\tisOpen    : {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: undefined\n\t\t}\n\t},\n\tslots: Object as SlotsType<{ default: SlotProps, button: SlotProps, styleList: SlotProps }>,\n\temits: [ 'update:modelValue', 'update:isOpen' ],\n\tsetup(props, { emit, slots }) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  isMapLoaded   = inject(isLoadedSymbol)!,\n\t\t\t  emitter       = inject(emitterSymbol)!,\n\t\t\t  isAdded       = ref(false),\n\t\t\t  isOpen        = ref(props.isOpen === undefined ? false : props.isOpen),\n\t\t\t  modelValue    = shallowRef(props.modelValue === undefined ? (props.mapStyles.length ? props.mapStyles[ 0 ] : null) : props.modelValue),\n\t\t\t  control       = new CustomControl(isAdded, false),\n\t\t\t  closer        = toggleOpen.bind(null, false);\n\n\t\tfunction setStyleByMap() {\n\t\t\tconst name = map.value!.getStyle().name;\n\t\t\tfor (let i = 0, len = props.mapStyles.length; i < len; i++) {\n\t\t\t\tif (props.mapStyles[ i ].name === name) {\n\t\t\t\t\tsetStyle(props.mapStyles[ i ]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twatch(isMapLoaded, (v) => {\n\t\t\tif (v) setStyleByMap();\n\t\t}, { immediate: true });\n\t\tmap.value!.on('style.load', setStyleByMap);\n\t\tdocument.addEventListener('click', closer);\n\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\n\t\tif (props.modelValue !== undefined) {\n\t\t\twatch(toRef(props, 'modelValue'), v => {\n\t\t\t\tif (v !== undefined) modelValue.value = v;\n\t\t\t});\n\t\t}\n\t\tif (props.isOpen !== undefined) {\n\t\t\twatch(toRef(props, 'isOpen'), v => {\n\t\t\t\tif (v !== undefined) isOpen.value = v;\n\t\t\t});\n\t\t}\n\n\t\tonBeforeUnmount(() => {\n\t\t\tif (isInitialized.value) {\n\t\t\t\tmap.value!.removeControl(control);\n\t\t\t\tmap.value!.off('style.load', setStyleByMap);\n\t\t\t}\n\t\t\tdocument.removeEventListener('click', closer);\n\t\t});\n\n\t\tfunction setStyle(s: StyleSwitchItem) {\n\t\t\tif (modelValue.value?.name === s.name) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\temitter.emit('styleSwitched', s);\n\n\t\t\t/*\n\t\t\t * Skip diff as long as Maplibre-GL doesn't fie `style.load` correctly\n\t\t\t * @see https://github.com/maplibre/maplibre-gl-js/issues/2587\n\t\t\t*/\n\t\t\tmap.value!.setStyle(s.style, {diff: false});\n\t\t\tif (props.modelValue === undefined) {\n\t\t\t\tmodelValue.value = s;\n\t\t\t}\n\t\t\temit('update:modelValue', s);\n\n\t\t\ttoggleOpen(false);\n\t\t}\n\n\t\tfunction toggleOpen(forceIsOpen?: boolean | Event, e?: Event) {\n\t\t\tif (isEvent(e)) {\n\t\t\t\te.stopPropagation();\n\t\t\t} else if (isEvent(forceIsOpen)) {\n\t\t\t\tforceIsOpen.stopPropagation();\n\t\t\t}\n\t\t\tif (props.isOpen !== undefined && props.isOpen === forceIsOpen || isOpen.value === forceIsOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (props.isOpen === undefined) {\n\t\t\t\tisOpen.value = typeof forceIsOpen === 'boolean' ? forceIsOpen : !isOpen.value;\n\t\t\t\temit('update:isOpen', isOpen.value);\n\t\t\t} else {\n\t\t\t\temit('update:isOpen', typeof forceIsOpen === 'boolean' ? forceIsOpen : !props.isOpen);\n\t\t\t}\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (!isAdded.value) {\n\t\t\t\treturn createCommentVNode('style-switch-control');\n\t\t\t}\n\n\t\t\tconst slotProps: SlotProps = {\n\t\t\t\tisOpen, toggleOpen, setStyle,\n\t\t\t\tmapStyles   : props.mapStyles,\n\t\t\t\tcurrentStyle: modelValue,\n\t\t\t};\n\n\t\t\treturn h(\n\t\t\t\tTeleport as any,\n\t\t\t\t{ to: control.container },\n\t\t\t\tslots.default\n\t\t\t\t\t? slots.default(slotProps)\n\t\t\t\t\t: [\n\t\t\t\t\t\tslots.button\n\t\t\t\t\t\t\t? slots.button(slotProps)\n\t\t\t\t\t\t\t: h(MglButton, {\n\t\t\t\t\t\t\t\ttype   : ButtonType.MDI,\n\t\t\t\t\t\t\t\tpath   : 'M12,18.54L19.37,12.8L21,14.07L12,21.07L3,14.07L4.62,12.81L12,18.54M12,16L3,9L12,2L21,9L12,16M12,4.53L6.26,9L12,13.47L17.74,9L12,4.53Z',\n\t\t\t\t\t\t\t\t'class': [ 'maplibregl-ctrl-icon maplibregl-style-switch', isOpen.value ? 'is-open' : '' ],\n\t\t\t\t\t\t\t\tonClick: toggleOpen.bind(null, true)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tslots.styleList\n\t\t\t\t\t\t\t? slots.styleList(slotProps)\n\t\t\t\t\t\t\t: h(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{ 'class': [ 'maplibregl-style-list', isOpen.value ? 'is-open' : '' ] },\n\t\t\t\t\t\t\t\tprops.mapStyles.map((s) => {\n\t\t\t\t\t\t\t\t\treturn s.icon\n\t\t\t\t\t\t\t\t\t\t? h(MglButton, {\n\t\t\t\t\t\t\t\t\t\t\ttype   : ButtonType.MDI,\n\t\t\t\t\t\t\t\t\t\t\tpath   : s.icon.path,\n\t\t\t\t\t\t\t\t\t\t\t'class': modelValue.value?.name === s.name ? 'is-active' : '',\n\t\t\t\t\t\t\t\t\t\t\tonClick: () => setStyle(s)\n\t\t\t\t\t\t\t\t\t\t}, createTextVNode(s.label))\n\t\t\t\t\t\t\t\t\t\t: h('button', {\n\t\t\t\t\t\t\t\t\t\t\ttype   : 'button',\n\t\t\t\t\t\t\t\t\t\t\t'class': modelValue.value?.name === s.name ? 'is-active' : '',\n\t\t\t\t\t\t\t\t\t\t\tonClick: () => setStyle(s)\n\t\t\t\t\t\t\t\t\t\t}, createTextVNode(s.label));\n\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t]\n\t\t\t);\n\t\t};\n\n\t},\n\t// just only for code assist\n\ttemplate: `\n\t\t<slot>\n\t\t<slot name=\"button\"></slot>\n\t\t<slot name=\"styleList\"></slot>\n\t\t</slot>\n\t`\n});\n\n","import {\n  defineComponent,\n  inject,\n  provide,\n  onBeforeUnmount,\n  PropType,\n  unref,\n  watch,\n  shallowRef,\n  h,\n} from \"vue\";\nimport {\n  LngLatLike,\n  Marker,\n  MarkerOptions,\n  PointLike,\n  PositionAnchor,\n} from \"maplibre-gl\";\nimport { MapLib } from \"@/lib/lib/map.lib\";\nimport { mapSymbol, markerSymbol } from \"@/lib/types\";\n\nexport default /*#__PURE__*/ defineComponent({\n  name: \"MglMarker\",\n  emits: [\"click\"],\n  props: {\n    coordinates: {\n      type: [Object, Array] as unknown as PropType<LngLatLike>,\n      required: true,\n    },\n    offset: [Object, Array] as PropType<PointLike>,\n    anchor: String as PropType<PositionAnchor>,\n    color: String as PropType<string>,\n    // draggable        : Boolean as PropType<boolean>, todo implement feature\n    clickTolerance: Number as PropType<number>,\n    rotation: Number as PropType<number>,\n    rotationAlignment: String as PropType<\"map\" | \"viewport\" | \"auto\">,\n    pitchAlignment: String as PropType<\"map\" | \"viewport\" | \"auto\">,\n    scale: Number as PropType<number>,\n  },\n  setup(props, { slots, emit }) {\n    const map = inject(mapSymbol)!,\n      opts: MarkerOptions = Object.keys(props)\n        .filter(\n          (opt) =>\n            (props as any)[opt] !== undefined &&\n            MapLib.MARKER_OPTION_KEYS.indexOf(opt as keyof MarkerOptions) !== -1\n        )\n        .reduce((obj, opt) => {\n          (obj as any)[opt] = unref((props as any)[opt]);\n          return obj;\n        }, {});\n\n    const marker = new Marker(opts);\n    marker.setLngLat(props.coordinates).addTo(map.value!);\n    provide(markerSymbol, shallowRef(marker));\n    marker.getElement().addEventListener(\"click\", () => {\n      emit(\"click\");\n    });\n\n    watch(\n      () => props.coordinates,\n      (v) => marker.setLngLat(v)\n    );\n    // watch(() => props.draggable, v => marker.setDraggable(v || false));\n    watch(\n      () => props.offset,\n      (v) => marker.setOffset(v || [0, 0])\n    );\n    watch(\n      () => props.pitchAlignment,\n      (v) => marker.setPitchAlignment(v || \"auto\")\n    );\n    watch(\n      () => props.rotationAlignment,\n      (v) => marker.setRotationAlignment(v || \"auto\")\n    );\n\n    onBeforeUnmount(marker.remove.bind(marker));\n\n    return () => [h(\"div\", slots.default ? slots.default({}) : undefined)];\n  },\n});\n","import { defineComponent, inject, onMounted, onBeforeUnmount, PropType, unref, watch, ref, h } from 'vue';\nimport { LngLatLike, Popup, Offset, PositionAnchor, PopupOptions, PointLike } from 'maplibre-gl';\nimport { MapLib } from '@/lib/lib/map.lib';\nimport { mapSymbol, markerSymbol } from '@/lib/types';\n\nexport default /*#__PURE__*/ defineComponent({\n  name : 'MglPopup',\n  emits: ['open', 'close'],\n  props: {\n    coordinates: {\n      type: [ Object, Array ] as unknown as PropType<LngLatLike>,\n      required: false\n    },\n    closeButton: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    closeOnClick: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    closeOnMove: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    focusAfterOpen: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n    anchor: {\n      type: String as PropType<PositionAnchor>,\n      required: false\n    },\n    offset: {\n      type: [Number, Object, Array] as PropType<Offset>,\n      required: false,\n    },\n    className: {\n      type: String,\n      required: false,\n    },\n    maxWidth: {\n      type: String,\n      default: '240px',\n    },\n    text: {\n      type: String,\n      required: false\n    }\n  },\n  setup(props, { slots, emit }) {\n    const map = inject(mapSymbol);\n    const marker = inject(markerSymbol);\n    const root = ref();\n\n    const opts: PopupOptions = Object.keys(props)\n      .filter(opt => (props as any)[ opt ] !== undefined && MapLib.POPUP_OPTION_KEYS.indexOf(opt as keyof PopupOptions) !== -1)\n      .reduce((obj, opt) => {\n\t(obj as any)[ opt ] = unref((props as any)[ opt ]);\n\treturn obj;\n      }, {});\n\n    const popup = new Popup(opts);\n\n    if (marker && marker.value) {\n      marker.value.setPopup(popup);\n    } else if (props.coordinates && map) {\n      popup.setLngLat(props.coordinates).addTo(map.value!);\n    }\n\n    if (props.text) {\n      popup.setText(props.text);\n    }\n\n    popup.on('open', () => emit('open'));\n    popup.on('close', () => emit('close'));\n\n    watch(() => props.coordinates, (v) => { if (v) { popup.setLngLat(v) } });\n    watch(() => props.text, v => popup.setText(v || ''));\n    watch(() => props.offset, v => popup.setOffset(v));\n    watch(() => props.maxWidth, v => popup.setMaxWidth(v));\n\n    onMounted(() => {\n      if (root.value && !props.text) {\n        popup.setDOMContent(root.value!);\n      }\n    });\n\n    return () => [\n      h('div', {ref: root}, slots.default ? slots.default() : undefined)\n    ];\n  },\n});\n","export type SourceLayerRegistryHandler = () => void\n\nexport class SourceLayerRegistry {\n\n\tprivate unmountHandlers = new Map<string, SourceLayerRegistryHandler>();\n\n\tregisterUnmountHandler(id: string, handler: SourceLayerRegistryHandler) {\n\t\tthis.unmountHandlers.set(id, handler);\n\t}\n\n\tunregisterUnmountHandler(id: string) {\n\t\tthis.unmountHandlers.delete(id);\n\t}\n\n\tunmount() {\n\t\tthis.unmountHandlers.forEach((h) => h());\n\t}\n\n}\n","import { ref, Ref, unref } from 'vue';\nimport { Source } from 'maplibre-gl';\n\nexport class SourceLib {\n\n\tprivate static readonly REFS = new Map<string, Ref<Source | undefined | null>>();\n\n\tstatic genSourceOpts<T extends object, O extends object>(type: string, props: object, sourceOpts: Array<keyof O>): T {\n\n\t\treturn Object.keys(props)\n\t\t\t\t\t .filter(opt => (props as any)[ opt ] !== undefined && sourceOpts.indexOf(opt as any) !== -1)\n\t\t\t\t\t .reduce((obj, opt) => {\n\t\t\t\t\t\t (obj as any)[ opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t return obj;\n\t\t\t\t\t }, { type } as T);\n\n\t}\n\n\tstatic getSourceRef<T extends Source>(mcid: number, source: any): Ref<T | undefined | null> {\n\n\t\tconst isString = typeof source === 'string',\n\t\t\t  key      = String(mcid) + (isString ? source : '');\n\t\tlet r          = SourceLib.REFS.get(key);\n\t\tif (!r) {\n\t\t\tr = ref(isString ? null : undefined);\n\t\t\tSourceLib.REFS.set(key, r);\n\t\t}\n\t\treturn r as Ref<T | undefined | null>;\n\n\t}\n\n}","import { inject, onBeforeUnmount, Ref, watch } from 'vue';\nimport { Source, SourceSpecification } from 'maplibre-gl';\nimport { emitterSymbol, isLoadedSymbol, mapSymbol } from '@/lib/types';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\n\nexport function useSource<O extends object>(\n\tsource: Ref<Source | undefined | null>,\n\tprops: any,\n\ttype: string,\n\tsourceOpts: Array<keyof O>,\n\tregistry: SourceLayerRegistry\n) {\n\n\tconst map      = inject(mapSymbol)!,\n\t\t  isLoaded = inject(isLoadedSymbol)!,\n\t\t  emitter  = inject(emitterSymbol)!;\n\n\tfunction addSource() {\n\t\tif (isLoaded.value) {\n\t\t\tmap.value!.addSource(props.sourceId, SourceLib.genSourceOpts<object, O>(type, props, sourceOpts) as SourceSpecification);\n\t\t\tsource.value = map.value!.getSource(props.sourceId);\n\t\t}\n\t}\n\n\tfunction resetSource() {\n\t\tsource.value = null;\n\t}\n\n\twatch(isLoaded, addSource, { immediate: true });\n\tmap.value!.on('style.load', addSource);\n\temitter.on('styleSwitched', resetSource);\n\n\treturn onBeforeUnmount(() => {\n\t\tif (isLoaded.value) {\n\t\t\tregistry.unmount();\n\t\t\tmap.value!.removeSource(props.sourceId);\n\t\t}\n\t\tmap.value!.off('style.load', addSource);\n\t\temitter.off('styleSwitched', resetSource);\n\t});\n\n}\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { CanvasSource, CanvasSourceSpecification, Coordinates } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<CanvasSourceSpecification>({\n\tanimate    : undefined,\n\tcanvas     : undefined,\n\tcoordinates: undefined,\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglCanvasSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\tcoordinates: Array as unknown as PropType<Coordinates>,\n\t\tanimate    : Boolean as PropType<boolean>,\n\t\tcanvas     : [ Object, String ] as PropType<HTMLCanvasElement | string>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<CanvasSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<CanvasSourceSpecification>(source, props, 'canvas', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'coordinates'), v => {\n\t\t\tif (v) {\n\t\t\t\tsource.value?.setCoordinates(v);\n\t\t\t}\n\t\t});\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Canvas Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, SlotsType, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { GeoJSONSource, GeoJSONSourceOptions, GeoJSONSourceSpecification, PromoteIdSpecification } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport type GeoJSON from 'geojson';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\n\nconst sourceOpts = AllSourceOptions<GeoJSONSourceSpecification>({\n\tdata             : undefined,\n\tmaxzoom          : undefined,\n\tattribution      : undefined,\n\tbuffer           : undefined,\n\ttolerance        : undefined,\n\tcluster          : undefined,\n\tclusterRadius    : undefined,\n\tclusterMaxZoom   : undefined,\n\tclusterMinPoints : undefined,\n\tclusterProperties: undefined,\n\tlineMetrics      : undefined,\n\tgenerateId       : undefined,\n\tpromoteId        : undefined,\n\tfilter           : undefined,\n});\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglGeoJsonSource',\n\tprops: {\n\t\tsourceId         : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\tdata             : [ Object, String ] as PropType<GeoJSON.Feature<GeoJSON.Geometry> | GeoJSON.FeatureCollection<GeoJSON.Geometry> | string>,\n\t\tmaxzoom          : Number as PropType<number>,\n\t\tattribution      : String as PropType<string>,\n\t\tbuffer           : Number as PropType<number>,\n\t\ttolerance        : Number as PropType<number>,\n\t\tcluster          : [ Number, Boolean ] as PropType<number | boolean>,\n\t\tclusterRadius    : Number as PropType<number>,\n\t\tclusterMaxZoom   : Number as PropType<number>,\n\t\tclusterMinPoints : Number as PropType<number>,\n\t\tclusterProperties: Object as PropType<object>,\n\t\tlineMetrics      : Boolean as PropType<boolean>,\n\t\tgenerateId       : Boolean as PropType<boolean>,\n\t\tpromoteId        : [ Object, String ] as PropType<PromoteIdSpecification>,\n\t\tfilter           : [ Array, String, Object ] as PropType<any>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<GeoJSONSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<GeoJSONSourceOptions>(source, props, 'geojson', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'data'), v => source.value?.setData(v || { type: 'FeatureCollection', features: [] }));\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('GeoJSON Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { Coordinates, ImageSource, ImageSourceSpecification } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<ImageSourceSpecification>({\n\turl        : undefined,\n\tcoordinates: undefined,\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglImageSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\tcoordinates: Array as unknown as PropType<Coordinates>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<ImageSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<ImageSourceSpecification>(source, props, 'image', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'coordinates'), v => {\n\t\t\tif (v) {\n\t\t\t\tsource.value?.setCoordinates(v);\n\t\t\t}\n\t\t});\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Image Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, SlotsType } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { RasterSourceSpecification, RasterTileSource } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\n\nconst sourceOpts = AllSourceOptions<RasterSourceSpecification>({\n\turl        : undefined,\n\ttiles      : undefined,\n\tbounds     : undefined,\n\tminzoom    : undefined,\n\tmaxzoom    : undefined,\n\ttileSize   : undefined,\n\tscheme     : undefined,\n\tattribution: undefined,\n\tvolatile   : undefined\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglRasterSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\ttiles      : Array as PropType<string[]>,\n\t\tbounds     : Array as PropType<number[]>,\n\t\tminzoom    : Number as PropType<number>,\n\t\tmaxzoom    : Number as PropType<number>,\n\t\ttileSize   : Number as PropType<number>,\n\t\tscheme     : String as PropType<'xyz' | 'tms'>,\n\t\tattribution: String as PropType<string>,\n\t\tvolatile   : Boolean\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<RasterTileSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<RasterSourceSpecification>(source, props, 'raster', sourceOpts, registry);\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Raster Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { RasterDEMSourceSpecification, RasterDEMTileSource } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<RasterDEMSourceSpecification>({\n\turl        : undefined,\n\ttiles      : undefined,\n\tbounds     : undefined,\n\tminzoom    : undefined,\n\tmaxzoom    : undefined,\n\ttileSize   : undefined,\n\tattribution: undefined,\n\tencoding   : undefined,\n\tvolatile   : undefined\n});\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglRasterDemSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\ttiles      : Array as PropType<string[]>,\n\t\tbounds     : Array as PropType<number[]>,\n\t\tminzoom    : Number as PropType<number>,\n\t\tmaxzoom    : Number as PropType<number>,\n\t\ttileSize   : Number as PropType<number>,\n\t\tattribution: String as PropType<string>,\n\t\tencoding   : String as PropType<'terrarium' | 'mapbox'>,\n\t\tvolatile   : Boolean\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<RasterDEMTileSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<RasterDEMSourceSpecification>(source, props, 'raster-dem', sourceOpts, registry);\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('RasterDem Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { PromoteIdSpecification, VectorSourceSpecification, VectorTileSource } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<VectorSourceSpecification>({\n\turl        : undefined,\n\ttiles      : undefined,\n\tbounds     : undefined,\n\tscheme     : undefined,\n\tminzoom    : undefined,\n\tmaxzoom    : undefined,\n\tattribution: undefined,\n\tpromoteId  : undefined,\n\tvolatile   : undefined\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglVectorSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\ttiles      : Array as PropType<string[]>,\n\t\tbounds     : Array as PropType<number[]>,\n\t\tscheme     : String as PropType<'xyz' | 'tms'>,\n\t\tminzoom    : Number as PropType<number>,\n\t\tmaxzoom    : Number as PropType<number>,\n\t\tattribution: String as PropType<string>,\n\t\tpromoteId  : [ Object, String ] as PropType<PromoteIdSpecification>,\n\t\tvolatile   : Boolean\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<VectorTileSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<VectorSourceSpecification>(source, props, 'vector', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'tiles'), v => source.value?.setTiles(v || []));\n\t\twatch(toRef(props, 'url'), v => source.value?.setUrl(v || ''));\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Vector Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { Coordinates, VideoSource, VideoSourceSpecification } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<VideoSourceSpecification>({\n\turls       : undefined,\n\tcoordinates: undefined\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglVideoSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turls       : Array as PropType<string[]>,\n\t\tcoordinates: Array as unknown as PropType<Coordinates>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<VideoSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<VideoSourceSpecification>(source, props, 'video', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'coordinates'), v => {\n\t\t\tif (v) {\n\t\t\t\tsource.value?.setCoordinates(v);\n\t\t\t}\n\t\t});\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Video Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import {\n\tBackgroundLayerSpecification,\n\tCircleLayerSpecification,\n\tFillExtrusionLayerSpecification,\n\tFillLayerSpecification,\n\tHeatmapLayerSpecification,\n\tHillshadeLayerSpecification,\n\tLayerSpecification,\n\tLineLayerSpecification,\n\tMap,\n\tMapLayerEventType,\n\tRasterLayerSpecification,\n\tSource,\n\tSymbolLayerSpecification\n} from 'maplibre-gl';\nimport { PropType, unref, VNode } from 'vue';\n\nexport class LayerLib {\n\n\tstatic readonly SOURCE_OPTS: Array<keyof (Omit<FillLayerSpecification & LineLayerSpecification & SymbolLayerSpecification & CircleLayerSpecification & HeatmapLayerSpecification & FillExtrusionLayerSpecification & RasterLayerSpecification & HillshadeLayerSpecification & BackgroundLayerSpecification, 'source-layer'> & {\n\t\tsourceLayer?: string\n\t})> = [\n\t\t'metadata', 'ref', 'source', 'sourceLayer', 'minzoom', 'maxzoom', 'interactive', 'filter', 'layout', 'paint'\n\t];\n\n\tstatic readonly LAYER_EVENTS: Array<keyof MapLayerEventType> = [\n\t\t'click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout', 'contextmenu', 'touchstart', 'touchend',\n\t\t'touchcancel'\n\t];\n\n\tstatic readonly SHARED = {\n\t\tprops: {\n\t\t\tlayerId    : {\n\t\t\t\ttype: String as PropType<string>,\n\t\t\t\trequired: true\n\t\t\t},\n\t\t\tsource     : [ String, Object ] as PropType<string | Source>,\n\t\t\tmetadata   : [ Object, Array, String, Number ] as PropType<any>,\n\t\t\tref        : String as PropType<string>,\n\t\t\tsourceLayer: String as PropType<string>,\n\t\t\tminzoom    : Number as PropType<number>,\n\t\t\tmaxzoom    : Number as PropType<number>,\n\t\t\tinteractive: Boolean as PropType<boolean>,\n\t\t\tfilter     : Array as PropType<any[ ]>,\n\t\t\tbefore     : String as PropType<string>\n\t\t},\n\t\temits: [\n\t\t\t'click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout', 'contextmenu', 'touchstart', 'touchend',\n\t\t\t'touchcancel'\n\t\t]\n\t};\n\n\tstatic genLayerOpts<T = LayerSpecification>(id: string, type: string, props: any, source: any): T {\n\n\t\treturn Object.keys(props)\n\t\t\t\t\t .filter(opt => (props as any)[ opt ] !== undefined && LayerLib.SOURCE_OPTS.indexOf(opt as any) !== -1)\n\t\t\t\t\t .reduce((obj, opt) => {\n\t\t\t\t\t\t (obj as any)[ opt === 'sourceLayer' ? 'source-layer' : opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t return obj;\n\t\t\t\t\t }, { type, source: props.source || source, id } as T);\n\n\t}\n\n\tstatic registerLayerEvents(map: Map, layerId: string, vn: VNode) {\n\n\t\tif (!vn.props) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0, len = LayerLib.LAYER_EVENTS.length; i < len; i++) {\n\t\t\tconst evProp = 'on' + LayerLib.LAYER_EVENTS[ i ].charAt(0).toUpperCase() + LayerLib.LAYER_EVENTS[ i ].substr(1);\n\t\t\tif (vn.props[ evProp ]) {\n\t\t\t\tmap.on(LayerLib.LAYER_EVENTS[ i ], layerId, vn.props[ evProp ]);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic unregisterLayerEvents(map: Map, layerId: string, vn: VNode) {\n\n\t\tif (!vn.props) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0, len = LayerLib.LAYER_EVENTS.length; i < len; i++) {\n\t\t\tconst evProp = 'on' + LayerLib.LAYER_EVENTS[ i ].charAt(0).toUpperCase() + LayerLib.LAYER_EVENTS[ i ].substr(1);\n\t\t\tif (vn.props[ evProp ]) {\n\t\t\t\tmap.off(LayerLib.LAYER_EVENTS[ i ], layerId, vn.props[ evProp ]);\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { inject, onBeforeUnmount } from 'vue';\nimport { ComponentInternalInstance } from '@vue/runtime-core';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { isLoadedSymbol, mapSymbol, sourceLayerRegistry } from '@/lib/types';\n\nexport function useDisposableLayer(layerId: string, ci?: ComponentInternalInstance) {\n\n\tconst map      = inject(mapSymbol)!,\n\t\t  isLoaded = inject(isLoadedSymbol)!,\n\t\t  registry = inject(sourceLayerRegistry)!;\n\n\tfunction removeLayer() {\n\t\tif (isLoaded.value) {\n\t\t\tif (ci) {\n\t\t\t\tLayerLib.unregisterLayerEvents(map.value!, layerId, ci.vnode);\n\t\t\t}\n\t\t\tconst layer = map.value!.getLayer(layerId);\n\t\t\tif (layer) {\n\t\t\t\tmap.value!.removeLayer(layerId);\n\t\t\t}\n\t\t}\n\t}\n\n\tregistry.registerUnmountHandler(layerId, removeLayer);\n\tonBeforeUnmount(() => {\n\t\tregistry.unregisterUnmountHandler(layerId);\n\t\tremoveLayer();\n\t});\n\n}","import { BackgroundLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglBackgroundLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<BackgroundLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<BackgroundLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Background Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<BackgroundLayerSpecification>(props.layerId!, 'background', props, sourceId), props.before || undefined);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Background Layer');\n\n\t}\n});\n","import { CircleLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglCircleLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<CircleLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<CircleLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Circle Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<CircleLayerSpecification>(props.layerId!, 'circle', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Circle Layer');\n\n\t}\n});\n","import { FillLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFillLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<FillLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<FillLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Fill Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<FillLayerSpecification>(props.layerId!, 'fill', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Fill Layer');\n\n\t}\n});\n\n","import { FillExtrusionLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFillExtrusionLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<FillExtrusionLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<FillExtrusionLayerSpecification['paint']>,\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Fill Extrude Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<FillExtrusionLayerSpecification>(props.layerId!, 'fill-extrusion', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Fill Extrusion Layer');\n\n\t}\n});\n","import { HeatmapLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglHeatmapLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<HeatmapLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<HeatmapLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Heatmap Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<HeatmapLayerSpecification>(props.layerId!, 'heatmap', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Heatmap Layer');\n\n\t}\n});\n","import { HillshadeLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglHillshadeLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<HillshadeLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<HillshadeLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Hillshade Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<HillshadeLayerSpecification>(props.layerId!, 'hillshade', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Hillshade Layer');\n\n\t}\n});\n","import { LineLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglLineLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<LineLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<LineLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Line Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<LineLayerSpecification>(props.layerId!, 'line', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Line Layer');\n\n\t}\n});\n","import { RasterLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglRasterLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<RasterLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<RasterLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Raster Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<RasterLayerSpecification>(props.layerId!, 'raster', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Raster Layer');\n\n\t}\n});\n","import { SymbolLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglSymbolLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<SymbolLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<SymbolLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Symbol Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<SymbolLayerSpecification>(props.layerId!, 'symbol', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Symbol Layer');\n\n\t}\n});\n","import { App, Plugin } from 'vue';\nimport '@/lib/css/maplibre.scss';\n\n// Import vue components\nimport * as components from '@/lib/components';\n\n// install function executed by Vue.use()\nconst install: Exclude<Plugin['install'], undefined> = function installVueMaplibreGl(app: App) {\n\tObject.entries(components).forEach(([ componentName, component ]) => {\n\t\tapp.component(componentName, component);\n\t});\n};\n\n// Create module definition for Vue.use()\nexport default install;\n\n// To allow individual component use, export components\n// each can be registered via Vue.component()\nexport * from '@/lib/components';\n\n// addition exports\nexport * from '@/lib/types';\nexport { useMap } from '@/lib/lib/mapRegistry';\nexport { defaults as MglDefaults } from '@/lib/defaults';\nexport { Position } from '@/lib/components/controls/position.enum';\nexport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\nexport { useSource } from '@/lib/composable/useSource';\nexport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n"],"names":["mapSymbol","isLoadedSymbol","isInitializedSymbol","componentIdSymbol","sourceIdSymbol","sourceLayerRegistry","emitterSymbol","markerSymbol","AllOptions","obj","AllSourceOptions","defaults","reactive","MapLib","component","map","ctx","eventName","payload","__publicField","Position","PositionValues","instances","defaultKey","useMap","key","registerMap","instance","_a","debounce","fn","wait","immediate","timeout","debounced","args","later","Language","setPrimaryLanguage","lang","layers","strLanguageRegex","strLanguageInArrayRegex","strBilingualRegex","strMoreInfoRegex","langStr","replacer","i","layer","layout","textFieldLayoutProp","regexMatch","newProp","j","elem","map_component","defineComponent","val","props","markRaw","getCurrentInstance","container","shallowRef","isInitialized","ref","isLoaded","isStyleReady","boundMapEvents","emitter","mitt","registryItem","resizeObserver","provide","watch","toRef","v","onStyleReady","initialize","opts","opt","unref","MaplibreMap","len","handler","restart","dispose","control","func","en","nextTick","onMounted","onBeforeUnmount","h","usePositionWatcher","source","_b","attribution_control","inject","AttributionControl","_CustomControl","isAdded","noClasses","CustomControl","custom_control","slots","Teleport","createCommentVNode","fullscreen_control","FullscreenControl","triggerResize","FrameRateControl","background","barWidth","color","font","graphHeight","graphWidth","graphTop","graphRight","width","el","now","fpsNow","context","fps","rect","frameRate_control","geolocation_control","GeolocateControl","navigation_control","NavigationControl","ScaleControlUnit","UnitValues","scale_control","ScaleControl","ButtonType","ButtonTypeValues","types","MglButton","warn","isEvent","styleSwitch_control","emit","isMapLoaded","isOpen","modelValue","closer","toggleOpen","setStyleByMap","name","setStyle","s","forceIsOpen","e","slotProps","createTextVNode","marker_component","marker","Marker","popup_component","root","popup","Popup","SourceLayerRegistry","id","_SourceLib","type","sourceOpts","mcid","isString","r","SourceLib","useSource","registry","addSource","resetSource","canvas_source","cid","geojson_source","image_source","raster_source","rasterDem_source","vector_source","video_source","_LayerLib","layerId","vn","evProp","LayerLib","useDisposableLayer","ci","removeLayer","background_layer","sourceId","sourceRef","il","src","circle_layer","fill_layer","fillExtrusion_layer","heatmap_layer","hillshade_layer","line_layer","raster_layer","smybol_layer","install","app","components","componentName"],"mappings":";;;;;;AAMO,MAAMA,IAAqB,OAAO,KAAK,GAClCC,IAAsB,OAAO,UAAU,GACvCC,IAAsB,OAAO,eAAe,GAC5CC,IAAsB,OAAO,aAAa,GAC1CC,IAAsB,OAAO,UAAU,GACvCC,IAAsB,OAAO,qBAAqB,GAClDC,KAAsB,OAAO,SAAS,GACtCC,KAAsB,OAAO,QAAQ;AAyB1C,SAASC,GAA6BC,GAA4B;AACjE,SAAA,OAAO,KAAKA,CAAG;AACvB;AAEO,SAASC,EAA0CD,GAA0C;AAC5F,SAAA,OAAO,KAAKA,CAAG;AACvB;ACtCO,MAAME,IAAWC,GAAqB;AAAA,EAC5C,OAAa;AAAA,EACb,QAAa,OAAO,OAAO,CAAE,GAAG,CAAE,CAAC;AAAA,EACnC,MAAa;AAAA,EACb,aAAa;AACd,CAAC;ACLM,MAAMC,EAAO;AAAA,EA2BnB,OAAO,mBAAmBC,GAAwCC,GAAUC,GAEzEC,GAAoC;AACtC,WAAO,CAACC,IAAU,CAAC,MAAMF,EAAI,KAAKC,GAAW,EAAE,MAAMC,EAAQ,MAAM,KAAAH,GAAK,WAAAD,GAAW,OAAOI,EAAqB,CAAA;AAAA,EAChH;AAED;AA/BCC,EAFYN,GAEI,mBAAwD;AAAA,EACvE;AAAA,EAAa;AAAA,EAAsB;AAAA,EAAW;AAAA,EAAe;AAAA,EAAU;AAAA,EAAW;AAAA,EAAU;AAAA,EAAkB;AAAA,EAC9G;AAAA,EAAyB;AAAA,EAAa;AAAA,EAAqB;AAAA,EAAW;AAAA,EAAc;AAAA,EAAmB;AAAA,EAAQ;AAAA,EAC/G;AAAA,EAAgC;AAAA,EAAoB;AAAA,EAAe;AAAA,EAAY;AAAA,EAAU;AAAA,EAA4B;AAAA,EAAgB;AAAA,EACrI;AAAA,EAAY;AAAA,EAAW;AAAA,EAAY;AAAA,EAAW;AAAA,EAAyB;AAAA,EAAS;AAAA,EAAmB;AAAA,EAAuB;AAAA,EAC1H;AAAA,EAAc;AAAA,EAAY;AAAA,EAAe;AAAA,EAAoB;AAAA,EAAmB;AAAA,EAAc;AAAA,EAAQ;AAAA,EAAoB;AAAA,EAC1H;AAAA,IAGDM,EAXYN,GAWI,sBAAiD;AAAA,EAChE;AAAA,EAAW;AAAA,EAAU;AAAA,EAAU;AAAA,EAAS;AAAA,EAAa;AAAA,EAAkB;AAAA,EAAY;AAAA,EAAqB;AAAA,EAAkB;AAAA,IAG3HM,EAfYN,GAeI,qBAA+C;AAAA,EACtD;AAAA,EAAe;AAAA,EAAgB;AAAA,EAAe;AAAA,EAAkB;AAAA,EAAU;AAAA,EAAU;AAAA,EAAa;AAAA,IAG1GM,EAnBYN,GAmBI,mBAAkB;AAAA,EACjC;AAAA,EAAS;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAU;AAAA,EAAU;AAAA,EAAU;AAAA,EAAoB;AAAA,EAAwB;AAAA,EAAe;AAAA,EAAQ;AAAA,EAC1H;AAAA,EAAqB;AAAA,EAAoB;AAAA,EAAc;AAAA,EAAa;AAAA,EAAiB;AAAA,EAAgB;AAAA,EAAc;AAAA,EAAe;AAAA,EAClI;AAAA,EAAY;AAAA,EAAc;AAAA,EAAS;AAAA,EAAe;AAAA,EAAY;AAAA,EAAa;AAAA,EAAW;AAAA,EAAa;AAAA,EAAY;AAAA,EAAa;AAAA,EAAa;AAAA,EACzI;AAAA,EAAW;AAAA,EAAa;AAAA,EAAQ;AAAA,EAAW;AAAA,EAAe;AAAA,EAAU;AAAA,EAAa;AAAA,EAAa;AAAA,EAAQ;AAAA,EAAW;AAAA,EAAc;AAAA,EAAS;AAAA,EACxI;AAAA;AC9BU,IAAAO,sBAAAA,OACXA,EAAA,WAAe,YACfA,EAAA,YAAe,aACfA,EAAA,cAAe,eACfA,EAAA,eAAe,gBAJJA,IAAAA,KAAA,CAAA,CAAA;AAOC,MAAAC,IAAiB,OAAO,OAAOD,CAAQ,GCM9CE,KAAiB,oBAAA,IACpB,GAAAC,KAAa,OAAO,SAAS;AAGhB,SAAAC,GAAOC,IAAuBF,IAAyB;AAClE,MAAAT,IAAYQ,GAAU,IAAIG,CAAG;AACjC,SAAKX,MACQA,IAAAF,GAAS,EAAE,UAAU,IAAO,WAAW,IAAO,UAAU,MAAM,GAChEU,GAAA,IAAIG,GAAKX,CAAS,IAEtBA;AACR;AAEO,SAASY,GAAYC,GAAuCZ,GAA6CU,IAAuBF,IAAyB;;AAC3J,MAAAT,IAAYQ,GAAU,IAAIG,CAAG;AACjC,SAAKX,MACQA,IAAAF,GAAS,EAAE,UAAU,IAAO,WAAW,IAAO,UAAU,MAAM,GAChEU,GAAA,IAAIG,GAAKX,CAAS,IAG7BA,EAAU,WAAY,IACtBA,EAAU,YAAY,IACtBA,EAAU,YAAYa,GACtBb,EAAU,MAAYC,EAAI,OAC1BD,EAAU,aAAYc,IAAAb,EAAI,UAAJ,gBAAAa,EAAW,aAAY,IAEtCd;AACR;ACxCO,SAASe,GAASC,GAAcC,IAAO,KAAKC,IAAY,IAAO;AACjE,MAAAC;AAEJ,WAASC,IAAyB;AACjC,UAAMC,IAAO,WAEPC,IAAQ,MAAM;AACT,MAAAH,IAAA,QACND,MAAc,MAEdF,EAAA,MAAM,MAAMK,CAAI;AAAA,IACpB;AAGD,iBAAaF,CAAQ,GACjBD,MAAc,MAAQC,MAAY,UAElCH,EAAA,MAAM,MAAMK,CAAI,GAEVF,IAAA,OAAO,WAAWG,GAAOL,CAAI;AAAA,EACxC;AAEA,SAAAG,EAAU,SAAS,MAAM;AACxB,iBAAaD,CAAQ;AAAA,EAAA,GAGfC;AACR;ACtBA,MAAMG,KAAW;AAAA;AAAA;AAAA;AAAA,EAIf,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAON,YAAY;AAAA;AAAA;AAAA;AAAA,EAKZ,OAAO;AAAA;AAAA;AAAA;AAAA,EAKP,WAAW;AAAA;AAAA;AAAA;AAAA,EAKX,OAAO;AAAA,EAEP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,SAAS;AAAA,EACT,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,SAAS;AAAA,EACT,UAAU;AAAA,EACV,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,SAAS;AAAA,EACT,aAAa;AAAA,EACb,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AAAA,EACT,WAAW;AAAA,EACX,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,OAAO;AACT;AAEwB,IAAI,IAAI,OAAO,OAAOA,EAAQ,CAAkB;AAMhD,IAAI,IAAI,OAAO,OAAOA,EAAQ,CAAC;AA8BvD,SAASC,GAAmBvB,GAAUwB,GAAc;AAC5C,QAAAC,IAASzB,EAAI,SAAA,EAAW,QAGxB0B,IAAmB,oCAGnBC,IAA0B,+BAG1BC,IACJ,oEAGIC,IAAmB,2CAEnBC,IAAUN,IAAO,QAAQA,CAAI,KAAK,QAClCO,IAAW;AAAA,IACf;AAAA,IACA,CAAC,OAAOD,CAAO;AAAA,IACf,CAAC,OAAOA,CAAO;AAAA,IACf,CAAC,OAAO,MAAM;AAAA,EAAA;AAGhB,WAASE,IAAI,GAAGA,IAAIP,EAAO,QAAQO,KAAK,GAAG;AACnC,UAAAC,IAAQR,EAAOO,CAAC,GAChBE,IAASD,EAAM;AAMjB,QAJA,CAACC,KAID,CAACA,EAAO,YAAY;AACtB;AAGF,UAAMC,IAAsBnC,EAAI,kBAAkBiC,EAAM,IAAI,YAAY;AAYpE,QAAAG;AAGJ,QACE,MAAM,QAAQD,CAAmB,KACjCA,EAAoB,UAAU,KAC9BA,EAAoB,CAAC,EAAE,KAAO,EAAA,YAAA,MAAkB,UAChD;AACM,YAAAE,IAAUF,EAAoB;AAIpC,eAASG,IAAI,GAAGA,IAAIH,EAAoB,QAAQG,KAAK,GAAG;AAChD,cAAAC,IAAOJ,EAAoBG,CAAC;AAM/B,aAAA,OAAOC,KAAS,YAAYA,aAAgB,WAC7Cb,EAAiB,KAAKa,EAAK,SAAS,CAAC,GACrC;AACA,UAAAF,EAAQC,CAAC,IAAIP;AACb;AAAA,QAAA,WAIA,MAAM,QAAQQ,CAAI,KAClBA,EAAK,UAAU,KACfA,EAAK,CAAC,EAAE,OAAO,YAAA,MAAkB,SACjCZ,EAAwB,KAAKY,EAAK,CAAC,EAAE,SAAS,CAAC,GAC/C;AACA,UAAAF,EAAQC,CAAC,IAAIP;AACb;AAAA,QAEA,WAAA,MAAM,QAAQQ,CAAI,KAClBA,EAAK,WAAW,KAChBA,EAAK,CAAC,EAAE,KAAO,EAAA,YAAA,MAAkB,QACjC;AACA,UAAAF,EAAQC,CAAC,IAAIP;AACb;AAAA,QACF;AAAA,MACF;AAEA,MAAA/B,EAAI,kBAAkBiC,EAAM,IAAI,cAAcI,CAAO;AAAA,IAAA,WAKrD,MAAM,QAAQF,CAAmB,KACjCA,EAAoB,UAAU,KAC9BA,EAAoB,CAAC,EAAE,OAAO,YAAA,MAAkB,SAChDR,EAAwB,KAAKQ,EAAoB,CAAC,EAAE,SAAS,CAAC,GAC9D;AACA,YAAME,IAAUN;AAChB,MAAA/B,EAAI,kBAAkBiC,EAAM,IAAI,cAAcI,CAAO;AAAA,IACvD,YAIG,OAAOF,KAAwB,YAC9BA,aAA+B,WACjCT,EAAiB,KAAKS,EAAoB,SAAU,CAAA,GACpD;AACA,YAAME,IAAUN;AAChB,MAAA/B,EAAI,kBAAkBiC,EAAM,IAAI,cAAcI,CAAO;AAAA,IAErD,WAAA,MAAM,QAAQF,CAAmB,KACjCA,EAAoB,WAAW,KAC/BA,EAAoB,CAAC,EAAE,KAAO,EAAA,YAAA,MAAkB,QAChD;AACA,YAAME,IAAUN;AAChB,MAAA/B,EAAI,kBAAkBiC,EAAM,IAAI,cAAcI,CAAO;AAAA,IAEpD,YAAA,OAAOF,KAAwB,YAC9BA,aAA+B,YAChCC,IAAaR,EAAkB,KAAKO,EAAoB,SAAU,CAAA,OACjE,MACF;AACM,YAAAE,IAAU,IAAIP,CAAO,IAAIM,EAAW,CAAC,CAAC,QAC1CA,EAAW,CAAC,KAAK,EACnB;AACA,MAAApC,EAAI,kBAAkBiC,EAAM,IAAI,cAAcI,CAAO;AAAA,IAEpD,YAAA,OAAOF,KAAwB,YAC9BA,aAA+B,YAChCC,IAAaP,EAAiB,KAAKM,EAAoB,SAAU,CAAA,OAChE,MACF;AACM,YAAAE,IAAU,GAAGD,EAAW,CAAC,CAAC,IAAIN,CAAO,IAAIM,EAAW,CAAC,CAAC;AAC5D,MAAApC,EAAI,kBAAkBiC,EAAM,IAAI,cAAcI,CAAO;AAAA,IACvD;AAAA,EACF;AACF;ACtPA,MAA6BG,KAAgB,gBAAAC,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,OAA8B,EAAE,MAAM,CAAE,QAAQ,MAAO,GAAgC,SAAS,OAAO;AAAA,IACvG,QAA8B,EAAE,MAAM,CAAE,QAAQ,MAAO,GAAgC,SAAS,OAAO;AAAA,IACvG,WAA8B,EAAE,MAAM,SAA8B,SAAS,MAAM7C,EAAS,UAAU;AAAA,IACtG,oBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,mBAAmB;AAAA,IAC/G,SAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,QAAQ;AAAA,IAClG,aAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,YAAY;AAAA,IACtG,QAA8B,EAAE,MAAM,CAAE,OAAO,MAAO,GAAiC,SAAS,MAAMA,EAAS,OAAO;AAAA,IACtH,SAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,QAAQ;AAAA,IACpG,QAA8B,EAAE,MAAM,CAAE,OAAO,MAAO,GAA2B,SAAS,MAAMA,EAAS,OAAO;AAAA,IAChH,gBAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,eAAe;AAAA,IACzG,uBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,sBAAsB;AAAA,IAClH,uBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,sBAAsB;AAAA,IAClH,mBAA8B,EAAE,MAAM,CAAE,QAAQ,KAAM,GAAkC,SAAS,MAAMA,EAAS,kBAAkB;AAAA,IAClI,SAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,QAAQ;AAAA,IACpG,YAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,WAAW;AAAA,IACvG,iBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,gBAAgB;AAAA,IAC5G,MAA8B,EAAE,MAAM,CAAE,SAAS,MAAO,GAAiC,SAAS,MAAMA,EAAS,KAAK;AAAA,IACtH,cAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,aAAa;AAAA,IACvG,8BAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,6BAA6B;AAAA,IACzH,kBAA8B,EAAE,MAAM,QAAsC,SAAS,MAAMA,EAAS,iBAAiB;AAAA,IACrH,aAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,YAAY;AAAA,IACxG,UAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,SAAS;AAAA,IACrG,QAA8B,EAAE,MAAM,QAA4C,SAAS,MAAMA,EAAS,OAAO;AAAA,IACjH,UAA8B,EAAE,MAAM,QAA2C,SAAS,MAAMA,EAAS,YAAY,KAAK;AAAA,IAC1H,0BAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,yBAAyB;AAAA,IACnH,cAA8B;AAAA,MAC7B,MAAW,CAAE,MAAO;AAAA,MACpB,WAAW,CAAC8C,MAAaA,KAAOrC;AAAA,MAChC,SAAW,MAAMT,EAAS;AAAA,IAC3B;AAAA,IACA,WAA8B,EAAE,MAAM,CAAE,OAAO,MAAO,GAAiC,SAAS,MAAMA,EAAS,UAAU;AAAA,IACzH,UAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,SAAS;AAAA,IACnG,SAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,QAAQ;AAAA,IAClG,UAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,SAAS;AAAA,IACnG,SAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,QAAQ;AAAA,IAClG,uBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,sBAAsB;AAAA,IAClH,OAA8B,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,MAAM;AAAA,IAChG,iBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,gBAAgB;AAAA,IAC5G,qBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,oBAAoB;AAAA,IAChH,mBAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,kBAAkB;AAAA,IAC9G,YAA8B,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,WAAW;AAAA;AAAA,IAEvG,UAAqB,EAAE,MAAM,CAAE,QAAQ,MAAO,GAAgC,SAAS,MAAMA,EAAS,MAAM;AAAA,IAC5G,aAAqB,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,YAAY;AAAA,IAC/F,kBAAqB,EAAE,MAAM,UAAgD,SAASA,EAAS,iBAAiB;AAAA,IAChH,iBAAqB,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,gBAAgB;AAAA,IACnG,YAAqB,EAAE,MAAM,SAA8B,SAAS,MAAMA,EAAS,WAAW;AAAA,IAC9F,MAAqB,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,KAAK;AAAA,IACtF,kBAAqB,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,iBAAiB;AAAA,IAClG,QAAqB,EAAE,MAAM,CAAE,QAAQ,MAAO,EAA+B;AAAA,IAC7E,YAAqB,EAAE,MAAM,QAA4B,SAAS,MAAMA,EAAS,WAAW;AAAA,IAC5F,qBAAqB,EAAE,MAAM,CAAE,SAAS,MAAO,GAAyC,SAAS,MAAMA,EAAS,oBAAoB;AAAA,EACrI;AAAA,EACA,OAAO;AAAA,IACN;AAAA,IAAa;AAAA,IAAY;AAAA,IAAY;AAAA,IAAc;AAAA,IAAc;AAAA,IAAc;AAAA,IAAwB;AAAA,IAA4B;AAAA,IACnI;AAAA,IAAY;AAAA,IAAuB;AAAA,IAAyB;AAAA,IAAwB;AAAA,IAAkB;AAAA,IAAiB;AAAA,IACvH;AAAA,IAAoB;AAAA,IAAkB;AAAA,IAAmB;AAAA,IAAiB;AAAA,IAAgB;AAAA,IAAkB;AAAA,IAAa;AAAA,IACzH;AAAA,IAAgB;AAAA,IAAiB;AAAA,IAAe;AAAA,IAAiB;AAAA,IAAgB;AAAA,IAAiB;AAAA,IAAiB;AAAA,IAAY;AAAA,IAC/H;AAAA,IAAiB;AAAA,IAAY;AAAA,IAAe;AAAA,IAAmB;AAAA,IAAc;AAAA,IAAiB;AAAA,IAAiB;AAAA,IAAY;AAAA,IAC3H;AAAA,IAAkB;AAAA,IAAa;AAAA,IAAgB;AAAA,EAChD;AAAA,EACA,OAAO;AAAA,EACP,MAAM+C,GAAO1C,GAAK;AAEjB,UAAMF,IAAiB6C,GAAQC,EAAqB,CAAA,GACjDC,IAAiBC,EACjB,GAAA/C,IAAiB+C,KACjBC,IAAiBC,EAAI,EAAK,GAC1BC,IAAiBD,EAAI,EAAK,GAC1BE,IAAiBF,EAAI,EAAK,GAC1BG,wBAAqB,IAAsB,GAC3CC,IAAiBC,GAAA,GACjBC,IAAiB5C,GAAYZ,GAAkBC,GAAK2C,EAAM,MAAM;AAE/D,QAAAa;AAEJ,IAAAC,EAAQxE,GAAWe,CAAG,GACtByD,EAAQvE,GAAgBgE,CAAQ,GAChCO,EAAQtE,GAAqB6D,CAAa,GAClCS,EAAArE,GAAmBW,EAAU,GAAG,GACxC0D,EAAQpE,GAAgB,EAAE,GAC1BoE,EAAQlE,IAAe8D,CAAO,GAK9BK,EAAMC,EAAMhB,GAAO,SAAS,GAAG,CAAKiB,MAAA;;AACnC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,WAAW+C;AAAA,IACvB,CACA,GACDF,EAAMC,EAAMhB,GAAO,QAAQ,GAAG,CAAKiB,MAAA;;AAClC,MAAIA,OACH/C,IAAAb,EAAI,UAAJ,QAAAa,EAAW,UAAU+C,GAAGjB,EAAM;AAAA,IAC/B,CACA,GACDe,EAAMC,EAAMhB,GAAO,QAAQ,GAAG,CAAKiB,MAAA;;AAClC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,UAAU+C;AAAA,IACtB,CACA,GACDF,EAAMC,EAAMhB,GAAO,WAAW,GAAG,CAAKiB,MAAA;;AACrC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,aAAa+C;AAAA,IACzB,CACA,GACDF,EAAMC,EAAMhB,GAAO,UAAU,GAAG,CAAKiB,MAAA;;AACpC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,YAAY+C;AAAA,IACxB,CACA,GACDF,EAAMC,EAAMhB,GAAO,SAAS,GAAG,CAAKiB,MAAA;;AACnC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,WAAW+C;AAAA,IACvB,CACA,GACDF,EAAMC,EAAMhB,GAAO,UAAU,GAAG,CAAKiB,MAAA;;AACpC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,YAAY+C;AAAA,IACxB,CACA,GACDF,EAAMC,EAAMhB,GAAO,SAAS,GAAG,CAAKiB,MAAA;;AACnC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,WAAW+C;AAAA,IACvB,CACA,GACDF,EAAMC,EAAMhB,GAAO,OAAO,GAAG,CAAKiB,MAAA;;AACjC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,SAAS+C;AAAA,IACrB,CACA,GACDF,EAAMC,EAAMhB,GAAO,mBAAmB,GAAG,CAAKiB,MAAA;;AAC7C,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,qBAAqB+C;AAAA,IACjC,CACA,GACDF,EAAMC,EAAMhB,GAAO,UAAU,GAAG,CAAKiB,MAAA;;AACpC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,SAAS+C;AAAA,IACrB,CACA,GACDF,EAAMC,EAAMhB,GAAO,kBAAkB,GAAG,CAAKiB,MAAA;;AAC5C,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,oBAAoB+C;AAAA,IAChC,CACA,GACDF,EAAMC,EAAMhB,GAAO,MAAM,GAAG,CAAKiB,MAAA;;AAChC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,QAAQ+C;AAAA,IACpB,CACA,GACDF,EAAMC,EAAMhB,GAAO,MAAM,GAAG,CAAKiB,MAAA;;AAChC,MAAIA,OACC/C,IAAAb,EAAA,UAAA,QAAAa,EAAO,QAAQ+C;AAAA,IACpB,CACA,GACDF,EAAMC,EAAMhB,GAAO,UAAU,GAAG,CAAKiB,MAAA;AACpC,MAAIT,EAAa,SAASnD,EAAI,SAASuD,EAAa,cAAcK,KAAK,UACnDrC,GAAAvB,EAAI,OAAc4D,KAAK,EAAE,GAC5CL,EAAa,WAAWK,KAAK;AAAA,IAC9B,CACA,GACDF,EAAMC,EAAMJ,GAAc,UAAU,GAAG,CAAKK,MAAA;AACvC,MAAAT,EAAa,SAASnD,EAAI,SACVuB,GAAAvB,EAAI,OAAc4D,KAAK,EAAE;AAAA,IAC7C,CACA;AAED,aAASC,IAAe;AACvB,MAAAV,EAAa,QAAQ,IACjBR,EAAM,WACTY,EAAa,WAAWZ,EAAM,WACpBY,EAAa,YACvBhC,GAAmBvB,EAAI,OAAe2C,EAAM,YAAY,EAAE;AAAA,IAE5D;AAEA,aAASmB,IAAa;AAErB,MAAAP,EAAa,YAAY;AAGnB,YAAAQ,IAAmB,OAAO,KAAKpB,CAAK,EAC/B,OAAO,CAAAqB,MAAQrB,EAAeqB,CAAI,MAAM,UAAalE,EAAO,gBAAgB,QAAQkE,CAAuB,MAAM,EAAE,EACnH,OAAmB,CAACtE,GAAKsE,OACxBtE,EAAasE,MAAQ,aAAa,UAAUA,CAAI,IAAIC,EAAOtB,EAAeqB,CAAI,CAAC,GACzEtE,IACL,EAAE,WAAWoD,EAAU,MAAgC,CAAA;AAWhE,UARJ9C,EAAI,QAAkB4C,GAAQ,IAAIsB,GAAYH,CAAI,CAAC,GACnDR,EAAa,MAASvD,EAAI,OAC1BgD,EAAc,QAAQ,IACPI,EAAA,IAAI,UAAU,OAAOF,EAAS,QAAQ,IAAMK,EAAa,WAAW,GAAK,GACpFvD,EAAA,MAAM,KAAK,aAAa6D,CAAY,GACxC7D,EAAI,MAAM,GAAG,QAAQoD,EAAe,IAAI,QAAQ,CAAQ,GAGpDrD,EAAU,MAAM;AACV,iBAAAiC,IAAI,GAAGmC,IAAMrE,EAAO,gBAAgB,QAAQkC,IAAImC,GAAKnC;AACzD,cAAAjC,EAAU,MAAM,MAAO,WAAWD,EAAO,gBAAiBkC,CAAE,CAAE,GAAG;AAC9D,kBAAAoC,KAAUtE,EAAO,mBAAmBC,GAAkBC,EAAI,OAAOC,GAAY,SAASH,EAAO,gBAAiBkC,CAAE,CAAC;AACvH,YAAAoB,EAAe,IAAItD,EAAO,gBAAiBkC,CAAE,GAAGoC,EAAO,GACvDpE,EAAI,MAAM,GAAGF,EAAO,gBAAiBkC,CAAE,GAAGoC,EAAO;AAAA,UAClD;AAAA;AAKF,MAAApE,EAAI,MAAM,UAAA,EAAY,iBAAiB,oBAAoBqE,CAAO;AAAA,IAEnE;AAEA,mBAAeC,IAAU;AAExB,MAAAf,EAAa,YAAY,IACzBA,EAAa,WAAY,IACzBL,EAAS,QAAgB,IAErBlD,EAAI,UAEPA,EAAI,MAAM,UAAA,EAAY,oBAAoB,oBAAoBqE,CAAO,GACrErE,EAAI,MAAM,UAAU,QAAQ,CAACuE,MAAY;AACpC,QAAAvE,EAAA,MAAO,cAAcuE,CAAO;AAAA,MAAA,CAChC,GACDvB,EAAc,QAAQ,IACPI,EAAA,QAAQ,CAACoB,GAAMC,MAAO;AAChC,QAAAzE,EAAA,MAAO,IAAIyE,EAAG,WAAW,IAAI,IAAIA,EAAG,UAAU,CAAC,IAAIA,GAAID,CAAW;AAAA,MAAA,CACtE,GAEDxE,EAAI,MAAM;IAGZ;AAEA,aAASqE,IAAU;AACV,MAAAC,KACRI,GAASZ,CAAU;AAAA,IACpB;AAKA,WAAAa,GAAU,MAAM;AAEJ,MAAAb,KAGP9D,EAAI,UACUwD,IAAA,IAAI,eAAe1C,GAASd,EAAI,MAAM,OAAO,KAAKA,EAAI,KAAK,GAAG,GAAG,CAAC,GACpEwD,EAAA,QAAQV,EAAU,KAAuB;AAAA,IACzD,CAEA,GAKD8B,EAAgB,MAAM;AAGrB,MAAIpB,MAAmB,WACtBA,EAAe,WAAW,GACTA,IAAA,SAGVc;IAAA,CAER,GAEGrE,EAAA,OAAO,EAAE,KAAAD,EAAA,CAAK,GAEX,MAAM6E;AAAA,MACZ;AAAA,MACA;AAAA,QACC,OAAS;AAAA,QACT,OAAS,EAAE,QAAQlC,EAAM,QAAQ,OAAOA,EAAM,MAAM;AAAA,MACrD;AAAA,MACA;AAAA,QACCkC,EAAE,OAAO,EAAE,KAAK/B,GAAW,OAAS,eAAe;AAAA,QACnDE,EAAc,SAAS/C,EAAI,MAAM,UAAUA,EAAI,MAAM,QAAQ,EAAE,IAAI;AAAA,MACpE;AAAA,IAAA;AAAA,EAGF;AACD,CAAC;AC/Te,SAAA6E,EAAmBC,GAA+C/E,GAAkCuE,GAAmB;AAChI,EAAAb,EAAAqB,GAAQ,CAACnB,MAAM;;AACpB,IAAIA,KAAKtD,EAAe,QAAQsD,CAAa,MAAM,QAG/C/C,IAAAb,EAAI,UAAJ,QAAAa,EAAW,WAAW0D,MACrBvE,EAAA,MAAM,cAAcuE,CAAO,IAE5BS,IAAAhF,EAAA,UAAA,QAAAgF,EAAO,WAAWT,GAASX;AAAA,EAAC,GAC9B,EAAE,WAAW,GAAA,CAAM;AACvB;ACRA,MAA6BqB,KAAgB,gBAAAxC,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAmB;AAAA,MAClB,MAAW;AAAA,MACX,WAAW,CAACmB,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,SAAmB;AAAA,IACnB,mBAAmB,CAAE,QAAQ,KAAM;AAAA,EACpC;AAAA,EACA,MAAMjB,GAAO;AAEZ,UAAM3C,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CoF,IAAgB,IAAIY,GAAmB,EAAE,SAASxC,EAAM,SAAS,mBAAmBA,EAAM,mBAAmB;AAEhH,IAAAmC,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACzDK,EAAgB,MAAM5B,EAAc,SAAShD,EAAI,MAAO,cAAcuE,CAAO,CAAC;AAAA,EAE/E;AAAA,EACA,SAAS;AAAA,EAET;AACD,CAAC,GCzBYa,IAAN,MAAMA,EAAkC;AAAA,EAO9C,YAAoBC,GAAuBC,GAAoB;AAF/C,IAAAlF,EAAA;AAEI,SAAA,UAAAiF,GACd,KAAA,YAAY,SAAS,cAAc,KAAK,GAC7C,KAAK,WAAWC,CAAS;AAAA,EAC1B;AAAA,EAEA,qBAAsC;AACrC,WAAOjF,EAAS;AAAA,EACjB;AAAA,EAEA,QAAqB;AACpB,WAAAqE,GAAS,MAAM,KAAK,QAAQ,QAAQ,EAAI,GACjC,KAAK;AAAA,EACb;AAAA,EAEA,WAAiB;AAChB,SAAK,QAAQ,QAAQ,IACrB,KAAK,UAAU;EAChB;AAAA,EAEA,WAAWY,GAAoB;AAC9B,IAAIA,KACH,KAAK,UAAU,UAAU,OAAOF,EAAc,aAAa,GAC3D,KAAK,UAAU,UAAU,OAAOA,EAAc,mBAAmB,MAEjE,KAAK,UAAU,UAAU,IAAIA,EAAc,aAAa,GACxD,KAAK,UAAU,UAAU,IAAIA,EAAc,mBAAmB;AAAA,EAEhE;AAED;AAlCChF,EAFYgF,GAEW,iBAAsB,oBAC7ChF,EAHYgF,GAGW,uBAAsB;AAHvC,IAAMG,KAANH;AAsCP,MAA6BI,KAAgB,gBAAA/C,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAW;AAAA,MACV,MAAW;AAAA,MACX,WAAW,CAACmB,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,WAAW;AAAA,MACV,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EACA,OAAO;AAAA,EACP,MAAMjB,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMzF,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CkG,IAAgBpC,EAAI,EAAK,GACzBsB,IAAgB,IAAIgB,GAAcF,GAAS1C,EAAM,SAAU;AAE9D,WAAAmC,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACnDb,EAAAC,EAAMhB,GAAO,WAAW,GAAG,OAAK4B,EAAQ,WAAWX,CAAE,CAAC,GAC5DgB,EAAgB,MAAA;;AAAM,aAAA5B,EAAc,WAASnC,IAAAb,EAAI,UAAJ,gBAAAa,EAAW,cAAc0D;AAAA,KAAQ,GAEvE,MAAM;;AACR,aAACc,EAAQ,QAGNR;AAAA,QACNa;AAAA,QACA,EAAE,IAAInB,EAAQ,UAAU;AAAA,SACxB1D,IAAA4E,EAAM,YAAN,gBAAA5E,EAAA,KAAA4E,GAAgB;MAAE,IALXE,EAAmB,kBAAkB;AAAA,IAM7C;AAAA,EAGF;AACD,CAAC,GC7E4BC,KAAgB,gBAAAnD,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAW;AAAA,MACV,MAAW;AAAA,MACX,SAAWpC,EAAS;AAAA,MACpB,WAAW,CAACuD,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,WAAW;AAAA,MACV,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EACA,MAAMjB,GAAO;AAEZ,UAAM3C,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CoF,IAAgB,IAAIsB,GAAkB,EAAE,WAAWlD,EAAM,aAAa,QAAW;AAGpF,aAASmD,IAAgB;AACxB,MAAApB,GAAS,MAAA;;AAAM,gBAAA7D,IAAAb,EAAI,UAAJ,gBAAAa,EAAW;AAAA,OAAQ;AAAA,IACnC;AAEQ,IAAA0D,EAAA,GAAG,mBAAmBuB,CAAa,GACnCvB,EAAA,GAAG,iBAAiBuB,CAAa,GAEzChB,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACzDK,EAAgB,MAAM;;AACb,MAAAL,EAAA,IAAI,mBAAmBuB,CAAa,GACpCvB,EAAA,IAAI,iBAAiBuB,CAAa,GAC1C9C,EAAc,WAASnC,IAAAb,EAAI,UAAJ,QAAAa,EAAW,cAAc0D;AAAA,IAAO,CACvD;AAAA,EAEF;AAAA,EACA,SAAS;AAAA,EAET;AACD,CAAC;ACxCM,MAAMwB,GAAqC;AAAA,EAcjD,YAAoBC,IAAc,mBACvBC,IAAc,IAAI,OAAO,kBACzBC,IAAc,WACdC,IAAc,wCACdC,IAAc,KAAK,OAAO,kBAC1BC,IAAc,KAAK,OAAO,kBAC1BC,IAAc,GACdC,IAAc,IAAI,OAAO,kBACzBC,IAAc,MAAM,OAAO,kBAAkB;AApBhD,IAAApG,EAAA,gBAAc;AACd,IAAAA,EAAA,mBAAc;AACd,IAAAA,EAAA,qBAAc;AAEd,IAAAA,EAAA,cAAsB;AACtB,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AAEA,IAAAA,EAAA,2CAAoB;AAER,SAAA,aAAA4F,GACT,KAAA,WAAAC,GACA,KAAA,QAAAC,GACA,KAAA,OAAAC,GACA,KAAA,cAAAC,GACA,KAAA,aAAAC,GACA,KAAA,WAAAC,GACA,KAAA,aAAAC,GACA,KAAA,QAAAC;AAAA,EACX;AAAA,EAEA,qBAA+B;AAC9B,WAAOnG,EAAS;AAAA,EACjB;AAAA,EAEA,MAAML,GAAwB;AAC7B,SAAK,MAAMA;AAEX,UAAMyG,IAAU,KAAK,YAAY,SAAS,cAAc,KAAK;AAC7D,WAAAA,EAAG,YAAY,uCAEZA,EAAA,MAAM,kBAAkB,KAAK,YAChCA,EAAG,MAAM,eAAkB,OAEtB,KAAA,aAA8B,SAAS,cAAc,KAAK,GAC1D,KAAA,WAAW,MAAM,QAAa,KAAK,OACnC,KAAA,WAAW,MAAM,aAAa,KAAK,MACnC,KAAA,WAAW,MAAM,UAAa,aAC9B,KAAA,WAAW,MAAM,WAAa,OAC9B,KAAA,WAAW,MAAM,aAAa,QACnC,KAAK,WAAW,cAAmB,YAE9B,KAAA,SAAuB,SAAS,cAAc,QAAQ,GAC3D,KAAK,OAAO,YAAgB,0BACvB,KAAA,OAAO,QAAgB,KAAK,OAC5B,KAAA,OAAO,SAAgB,KAAK,aACjC,KAAK,OAAO,MAAM,UAAU,UAAU,KAAK,QAAQ,OAAO,gBAAgB,eAAe,KAAK,cAAc,OAAO,gBAAgB,OAEhIA,EAAA,YAAY,KAAK,UAAU,GAC3BA,EAAA,YAAY,KAAK,MAAM,GAE1B,KAAK,cAAc,IAAI,aAAa,KAAK,YAAY,KAAK,IAAI,CAAC,GAC/D,KAAK,cAAc,IAAI,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC,GAC3D,KAAK,IAAI,GAAG,aAAa,KAAK,cAAc,IAAI,WAAW,CAAQ,GACnE,KAAK,IAAI,GAAG,WAAW,KAAK,cAAc,IAAI,SAAS,CAAQ,GACxD,KAAK;AAAA,EACb;AAAA,EAEA,WAAiB;AAChB,SAAK,IAAK,IAAI,aAAa,KAAK,cAAc,IAAI,WAAW,CAAQ,GACrE,KAAK,IAAK,IAAI,WAAW,KAAK,cAAc,IAAI,SAAS,CAAQ,GACjE,KAAK,cAAc,SACnB,KAAK,UAAW,WAAY,YAAY,KAAK,SAAU,GACvD,KAAK,MAAM;AAAA,EACZ;AAAA,EAEA,cAAc;AACb,SAAK,SAAS,GACT,KAAA,OAAS,YAAY,OAC1B,KAAK,cAAc,IAAI,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC,GACzD,KAAK,IAAK,GAAG,UAAU,KAAK,cAAc,IAAI,QAAQ,CAAQ;AAAA,EAC/D;AAAA,EAEA,YAAY;AACL,UAAAC,IAAM,YAAY;AACxB,SAAK,YAAY,KAAK,OAAOA,CAAG,CAAC,GACjC,KAAK,SAAS,GACd,KAAK,OAAS,MACd,KAAK,IAAK,IAAI,UAAU,KAAK,cAAc,IAAI,QAAQ,CAAQ;AAAA,EAChE;AAAA,EAEA,WAAW;AACV,QAAI,KAAK,MAAM;AACT,WAAA;AACC,YAAAA,IAAM,YAAY;AACpB,MAAAA,KAAO,KAAK,OAAO,QACtB,KAAK,YAAY,KAAK,OAAOA,CAAG,CAAC,GACjC,KAAK,SAAS,GACT,KAAA,OAAS,YAAY;IAE5B;AAAA,EACD;AAAA,EAEA,OAAOA,GAAa;AACd,gBAAA,aAAaA,IAAM,KAAK,MAC7B,KAAK,eAAe,KAAK,QAClB,KAAK,MAAO,MAAM,KAAK,UAAWA,IAAM,KAAK,KAAM,KAAK;AAAA,EAChE;AAAA,EAEA,YAAYC,GAAgB;AAC3B,UAAMC,IAAU,KAAK,OAAQ,WAAW,IAAI,GACtCC,IAAU,KAAK,MAAO,MAAM,KAAK,cAAe,KAAK,SAAS,KAAK,GACnEC,KAAW,KAAK,aAAa,KAAK;AAExC,IAAAF,EAAQ,YAAc,KAAK,YAC3BA,EAAQ,cAAc,GACtBA,EAAQ,SAAS,GAAG,GAAG,KAAK,YAAY,KAAK,QAAQ,GACrDA,EAAQ,YAAY,KAAK,OAEzB,KAAK,WAAY,cAAc,GAAGD,CAAM,SAASE,CAAG,SAC5CD,EAAA;AAAA,MACP,KAAK;AAAA,MACL,KAAK,aAAaE;AAAA,MAClB,KAAK;AAAA,MACL,KAAK,aAAaA;AAAA,MAClB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,aAAaA;AAAA,MAClB,KAAK;AAAA,IAAA,GAEEF,EAAA;AAAA,MACP,KAAK,aAAa,KAAK,aAAaE;AAAA,MACpC,KAAK;AAAA,MACLA;AAAA,MACA,KAAK;AAAA,IAAA,GAENF,EAAQ,YAAc,KAAK,YAC3BA,EAAQ,cAAc,MACdA,EAAA;AAAA,MACP,KAAK,aAAa,KAAK,aAAaE;AAAA,MACpC,KAAK;AAAA,MACLA;AAAA,OACC,IAAIH,IAAS,OAAO,KAAK;AAAA,IAAA;AAAA,EAE5B;AAED;AAEA,MAA6BI,KAAgB,gBAAAtE,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAW;AAAA,MACX,WAAW,CAACmB,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,YAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,UAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS,IAAI,OAAO;AAAA,IACrB;AAAA,IACA,OAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,MAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS,KAAK,OAAO;AAAA,IACtB;AAAA,IACA,YAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS,KAAK,OAAO;AAAA,IACtB;AAAA,IACA,UAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,YAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS,IAAI,OAAO;AAAA,IACrB;AAAA,IACA,OAAa;AAAA,MACZ,MAAS;AAAA,MACT,SAAS,MAAM,OAAO;AAAA,IACvB;AAAA,EACD;AAAA,EACA,MAAMjB,GAAO;AAEN,UAAA3C,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CoF,IAAgB,IAAIwB;AAAA,MACnBpD,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,MACNA,EAAM;AAAA,IAAA;AAGV,IAAAmC,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACzDK,EAAgB,MAAA;;AAAM,aAAA5B,EAAc,WAASnC,IAAAb,EAAI,UAAJ,gBAAAa,EAAW,cAAc0D;AAAA,KAAQ;AAAA,EAE/E;AAAA,EACA,SAAS;AAAA,EAET;AACD,CAAC,GCpN4ByC,KAAgB,gBAAAvE,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAoB;AAAA,MACnB,MAAW;AAAA,MACX,SAAWpC,EAAS;AAAA,MACpB,WAAW,CAACuD,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,iBAAoB;AAAA,MACnB,MAAS;AAAA,MACT,SAAS,EAAE,oBAAoB,IAAO,SAAS,IAAK;AAAA,IACrD;AAAA,IACA,kBAAoB;AAAA,MACnB,MAAS;AAAA,MACT,SAAS,EAAE,SAAS,GAAG;AAAA,IACxB;AAAA,IACA,mBAAoB;AAAA,MACnB,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,MACnB,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,IACA,kBAAoB;AAAA,MACnB,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EACA,MAAMjB,GAAO;AAEN,UAAA3C,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CoF,IAAgB,IAAI0C,GAAiB;AAAA,MACpC,iBAAoBtE,EAAM;AAAA,MAC1B,kBAAoBA,EAAM;AAAA,MAC1B,mBAAoBA,EAAM;AAAA,MAC1B,oBAAoBA,EAAM;AAAA,MAC1B,kBAAoBA,EAAM;AAAA,IAAA,CAC1B;AAEJ,IAAAmC,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACzDK,EAAgB,MAAA;;AAAM,aAAA5B,EAAc,WAASnC,IAAAb,EAAI,UAAJ,gBAAAa,EAAW,cAAc0D;AAAA,KAAQ;AAAA,EAE/E;AAAA,EACA,SAAS;AAAA,EAET;AACD,CAAC,GClD4B2C,KAAgB,gBAAAzE,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAgB;AAAA,MACf,MAAW;AAAA,MACX,SAAWpC,EAAS;AAAA,MACpB,WAAW,CAACuD,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,aAAgB,EAAE,MAAM,SAA8B,SAAS,GAAK;AAAA,IACpE,UAAgB,EAAE,MAAM,SAA8B,SAAS,GAAK;AAAA,IACpE,gBAAgB;AAAA,EACjB;AAAA,EACA,MAAMjB,GAAO;AAEN,UAAA3C,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CoF,IAAgB,IAAI4C,GAAkB,EAAE,aAAaxE,EAAM,aAAa,UAAUA,EAAM,UAAU,gBAAgBA,EAAM,eAAA,CAAgB;AAE3I,IAAAmC,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACzDK,EAAgB,MAAA;;AAAM,aAAA5B,EAAc,WAASnC,IAAAb,EAAI,UAAJ,gBAAAa,EAAW,cAAc0D;AAAA,KAAQ;AAAA,EAE/E;AAAA,EACA,SAAS;AAAA,EAET;AACD,CAAC;AC3BW,IAAA6C,uBAAAA,OACXA,EAAA,WAAW,YACXA,EAAA,SAAW,UACXA,EAAA,WAAW,YAHAA,IAAAA,MAAA,CAAA,CAAA;AAOZ,MAAMC,KAAa,OAAO,OAAOD,EAAgB,GAGpBE,KAAgB,gBAAA7E,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAU;AAAA,MACT,MAAW;AAAA,MACX,WAAW,CAACmB,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,UAAU,EAAE,MAAM,QAA4B,SAAS,IAAI;AAAA,IAC3D,MAAU;AAAA,MACT,MAAW;AAAA,MACX,SAAW;AAAA,MACX,WAAW,CAACA,MACJyD,GAAW,QAAQzD,CAAC,MAAM;AAAA,IAEnC;AAAA,EACD;AAAA,EACA,MAAMjB,GAAO;AAEZ,UAAM3C,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1CoF,IAAgB,IAAIgD,GAAa,EAAE,UAAU5E,EAAM,UAAU,MAAMA,EAAM,MAAM;AAElF,IAAAmC,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GACzDK,EAAgB,MAAA;;AAAM,aAAA5B,EAAc,WAASnC,IAAAb,EAAI,UAAJ,gBAAAa,EAAW,cAAc0D;AAAA,KAAQ;AAAA,EAE/E;AAAA,EACA,SAAS;AAAA,EAET;AACD,CAAC;AC7CW,IAAAiD,uBAAAA,OACXA,EAAA,UAAc,WACdA,EAAA,OAAc,QACdA,EAAA,MAAc,OACdA,EAAA,cAAc,gBAJHA,IAAAA,MAAA,CAAA,CAAA;AAOC,MAAAC,KAAmB,OAAO,OAAOD,EAAU,GAOlDE,IAA2C;AAAA,EAC9C,MAA0B;AAAA,EAC1B,KAA0B;AAAA,IAC3B,MAAS;AAAA,IACT,SAAS;AAAA,EACV;AAAA,EACE,gBAA0B;AAAA,IAC3B,MAAS;AAAA,IACT,SAAS;AAAA,EACV;AAAA,EACE,SAA0B;AAAA,IAC3B,MAAS;AAAA,IACT,SAAS;AAAA,EACV;AACD,GAG6BC,KAAgB,gBAAAlF,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,MAAS;AAAA,MACR,MAAW;AAAA,MACX,SAAW;AAAA,MACX,WAAW,CAACmB,MACJ6D,GAAiB,QAAQ7D,CAAC,MAAM;AAAA,IAEzC;AAAA,IACA,MAAS;AAAA,MACR,MAAM;AAAA,IACP;AAAA,IACA,MAAS;AAAA,IACT,SAAS;AAAA,EACV;AAAA,EACA,OAAO;AAAA,EACP,MAAMjB,GAAO,EAAE,OAAA8C,KAAS;AAEvB,IAAI,CAAC9C,EAAM,QAAQA,EAAM,SAAS,UACjCiF,EAAK,+CAA+C;AAGrD,UAAMhI,IAAWqD,EAAIyE,EAAO/E,EAAM,IAAK,KAAK+E,EAAM,OAAO;AACnD,WAAAhE,EAAA,MAAMf,EAAM,MAAM,CAAKiB,MAAAhE,EAAS,QAAQ8H,EAAO9D,CAAE,KAAK8D,EAAM,OAAO,GAElE,MAAM;;AACR,aAAA/E,EAAM,SAAS,SACXkC,EAAE,UAAU,EAAE,MAAM,aAAYhE,IAAA4E,EAAM,YAAN,gBAAA5E,EAAA,KAAA4E,GAAgB,CAAE,EAAC,IAEpDZ;AAAA,QAAE;AAAA,QAAU,EAAE,MAAM,UAAU,OAAS,uBAAuB;AAAA,QACpE;AAAA,UACCA;AAAA,YACC;AAAA,YACA;AAAA,cACC,OAASlC,EAAM,QAAQ/C,EAAS,MAAO;AAAA,cACvC,QAAS+C,EAAM,QAAQ/C,EAAS,MAAO;AAAA,cACvC,SAAS+C,EAAM,WAAW/C,EAAS,MAAO;AAAA,YAC3C;AAAA,YACAiF,EAAE,QAAQ,EAAE,MAAM,gBAAgB,GAAGlC,EAAM,MAAM;AAAA,UAClD;AAAA,WACAqC,IAAAS,EAAM,YAAN,gBAAAT,EAAA,KAAAS,GAAgB;QACjB;AAAA,MAAA;AAAA,IACD;AAAA,EAGF;AACD,CAAC;ACzDD,SAASoC,GAAQ,GAAoB;AAC7B,SAAA,KAAK,CAAC,CAAE,EAAY;AAC5B;AAUA,MAA6BC,KAAgB,gBAAArF,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAY;AAAA,MACX,MAAW;AAAA,MACX,WAAW,CAACmB,MACJtD,EAAe,QAAQsD,CAAC,MAAM;AAAA,IAEvC;AAAA,IACA,WAAY;AAAA,MACX,MAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAU,CAAC;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACX,MAAM;AAAA,IACP;AAAA,IACA,QAAY;AAAA,MACX,MAAS;AAAA,MACT,SAAS;AAAA,IACV;AAAA,EACD;AAAA,EACA,OAAO;AAAA,EACP,OAAO,CAAE,qBAAqB,eAAgB;AAAA,EAC9C,MAAMjB,GAAO,EAAE,MAAAoF,GAAM,OAAAtC,KAAS;AAEvB,UAAAzF,IAAgBkF,EAAOjG,CAAS,GACnC+D,IAAgBkC,EAAO/F,CAAmB,GAC1C6I,IAAgB9C,EAAOhG,CAAc,GACrCmE,IAAgB6B,EAAO3F,EAAa,GACpC8F,IAAgBpC,EAAI,EAAK,GACzBgF,IAAgBhF,EAAIN,EAAM,WAAW,SAAY,KAAQA,EAAM,MAAM,GACrEuF,IAAgBnF,EAAWJ,EAAM,eAAe,SAAaA,EAAM,UAAU,SAASA,EAAM,UAAW,CAAE,IAAI,OAAQA,EAAM,UAAU,GACrI4B,IAAgB,IAAIgB,GAAcF,GAAS,EAAK,GAChD8C,IAAgBC,EAAW,KAAK,MAAM,EAAK;AAE9C,aAASC,IAAgB;AACxB,YAAMC,IAAOtI,EAAI,MAAO,SAAA,EAAW;AAC1B,eAAAgC,IAAI,GAAGmC,IAAMxB,EAAM,UAAU,QAAQX,IAAImC,GAAKnC;AACtD,YAAIW,EAAM,UAAWX,CAAE,EAAE,SAASsG,GAAM;AAC9B,UAAAC,EAAA5F,EAAM,UAAWX,CAAE,CAAC;AAC7B;AAAA,QACD;AAAA,IAEF;AAEM,IAAA0B,EAAAsE,GAAa,CAACpE,MAAM;AACrB,MAAAA,KAAiByE;IAAA,GACnB,EAAE,WAAW,GAAA,CAAM,GAClBrI,EAAA,MAAO,GAAG,cAAcqI,CAAa,GAChC,SAAA,iBAAiB,SAASF,CAAM,GAGzCrD,EAAmBnB,EAAMhB,GAAO,UAAU,GAAG3C,GAAKuE,CAAO,GAErD5B,EAAM,eAAe,UACxBe,EAAMC,EAAMhB,GAAO,YAAY,GAAG,CAAKiB,MAAA;AACtC,MAAIA,MAAM,WAAWsE,EAAW,QAAQtE;AAAA,IAAA,CACxC,GAEEjB,EAAM,WAAW,UACpBe,EAAMC,EAAMhB,GAAO,QAAQ,GAAG,CAAKiB,MAAA;AAClC,MAAIA,MAAM,WAAWqE,EAAO,QAAQrE;AAAA,IAAA,CACpC,GAGFgB,EAAgB,MAAM;AACrB,MAAI5B,EAAc,UACbhD,EAAA,MAAO,cAAcuE,CAAO,GAC5BvE,EAAA,MAAO,IAAI,cAAcqI,CAAa,IAElC,SAAA,oBAAoB,SAASF,CAAM;AAAA,IAAA,CAC5C;AAED,aAASI,EAASC,GAAoB;;AACrC,QAAI3H,IAAAqH,EAAW,UAAX,gBAAArH,EAAkB,UAAS2H,EAAE,SAGzBnF,EAAA,KAAK,iBAAiBmF,CAAC,GAM/BxI,EAAI,MAAO,SAASwI,EAAE,OAAO,EAAC,MAAM,IAAM,GACtC7F,EAAM,eAAe,WACxBuF,EAAW,QAAQM,IAEpBT,EAAK,qBAAqBS,CAAC,GAE3BJ,EAAW,EAAK;AAAA,IACjB;AAES,aAAAA,EAAWK,GAA+BC,GAAW;AAMzD,MALAb,GAAQa,CAAC,IACZA,EAAE,gBAAgB,IACRb,GAAQY,CAAW,KAC7BA,EAAY,gBAAgB,GAEzB,EAAA9F,EAAM,WAAW,UAAaA,EAAM,WAAW8F,KAAeR,EAAO,UAAUQ,OAG/E9F,EAAM,WAAW,UACpBsF,EAAO,QAAQ,OAAOQ,KAAgB,YAAYA,IAAc,CAACR,EAAO,OACnEF,EAAA,iBAAiBE,EAAO,KAAK,KAElCF,EAAK,iBAAiB,OAAOU,KAAgB,YAAYA,IAAc,CAAC9F,EAAM,MAAM;AAAA,IAEtF;AAEA,WAAO,MAAM;AACR,UAAA,CAAC0C,EAAQ;AACZ,eAAOM,EAAmB,sBAAsB;AAGjD,YAAMgD,IAAuB;AAAA,QAC5B,QAAAV;AAAA,QAAQ,YAAAG;AAAA,QAAY,UAAAG;AAAA,QACpB,WAAc5F,EAAM;AAAA,QACpB,cAAcuF;AAAA,MAAA;AAGR,aAAArD;AAAA,QACNa;AAAA,QACA,EAAE,IAAInB,EAAQ,UAAU;AAAA,QACxBkB,EAAM,UACHA,EAAM,QAAQkD,CAAS,IACvB;AAAA,UACDlD,EAAM,SACHA,EAAM,OAAOkD,CAAS,IACtB9D,EAAE8C,IAAW;AAAA,YACd,MAASH,GAAW;AAAA,YACpB,MAAS;AAAA,YACT,OAAS,CAAE,gDAAgDS,EAAO,QAAQ,YAAY,EAAG;AAAA,YACzF,SAASG,EAAW,KAAK,MAAM,EAAI;AAAA,UAAA,CACnC;AAAA,UACF3C,EAAM,YACHA,EAAM,UAAUkD,CAAS,IACzB9D;AAAA,YACD;AAAA,YACA,EAAE,OAAS,CAAE,yBAAyBoD,EAAO,QAAQ,YAAY,EAAG,EAAE;AAAA,YACtEtF,EAAM,UAAU,IAAI,CAAC6F,MAAM;;AACnB,qBAAAA,EAAE,OACN3D,EAAE8C,IAAW;AAAA,gBACd,MAASH,GAAW;AAAA,gBACpB,MAASgB,EAAE,KAAK;AAAA,gBAChB,SAAS3H,IAAAqH,EAAW,UAAX,gBAAArH,EAAkB,UAAS2H,EAAE,OAAO,cAAc;AAAA,gBAC3D,SAAS,MAAMD,EAASC,CAAC;AAAA,cAAA,GACvBI,GAAgBJ,EAAE,KAAK,CAAC,IACzB3D,EAAE,UAAU;AAAA,gBACb,MAAS;AAAA,gBACT,SAASG,IAAAkD,EAAW,UAAX,gBAAAlD,EAAkB,UAASwD,EAAE,OAAO,cAAc;AAAA,gBAC3D,SAAS,MAAMD,EAASC,CAAC;AAAA,cACvB,GAAAI,GAAgBJ,EAAE,KAAK,CAAC;AAAA,YAAA,CAE5B;AAAA,UACF;AAAA,QACF;AAAA,MAAA;AAAA,IACF;AAAA,EAGF;AAAA;AAAA,EAEA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAMX,CAAC,GCtL4BK,KAAgB,gBAAApG,EAAA;AAAA,EAC3C,MAAM;AAAA,EACN,OAAO,CAAC,OAAO;AAAA,EACf,OAAO;AAAA,IACL,aAAa;AAAA,MACX,MAAM,CAAC,QAAQ,KAAK;AAAA,MACpB,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ,CAAC,QAAQ,KAAK;AAAA,IACtB,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA,IAEP,gBAAgB;AAAA,IAChB,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,gBAAgB;AAAA,IAChB,OAAO;AAAA,EACT;AAAA,EACA,MAAME,GAAO,EAAE,OAAA8C,GAAO,MAAAsC,KAAQ;AACtB,UAAA/H,IAAMkF,EAAOjG,CAAS,GAC1B8E,IAAsB,OAAO,KAAKpB,CAAK,EACpC;AAAA,MACC,CAACqB,MACErB,EAAcqB,CAAG,MAAM,UACxBlE,EAAO,mBAAmB,QAAQkE,CAA0B,MAAM;AAAA,IAAA,EAErE,OAAO,CAACtE,GAAKsE,OACXtE,EAAYsE,CAAG,IAAIC,EAAOtB,EAAcqB,CAAG,CAAC,GACtCtE,IACN,CAAE,CAAA,GAEHoJ,IAAS,IAAIC,GAAOhF,CAAI;AAC9B,WAAA+E,EAAO,UAAUnG,EAAM,WAAW,EAAE,MAAM3C,EAAI,KAAM,GAC5CyD,EAAAjE,IAAcuD,EAAW+F,CAAM,CAAC,GACxCA,EAAO,WAAW,EAAE,iBAAiB,SAAS,MAAM;AAClD,MAAAf,EAAK,OAAO;AAAA,IAAA,CACb,GAEDrE;AAAA,MACE,MAAMf,EAAM;AAAA,MACZ,CAACiB,MAAMkF,EAAO,UAAUlF,CAAC;AAAA,IAAA,GAG3BF;AAAA,MACE,MAAMf,EAAM;AAAA,MACZ,CAACiB,MAAMkF,EAAO,UAAUlF,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAA,GAErCF;AAAA,MACE,MAAMf,EAAM;AAAA,MACZ,CAACiB,MAAMkF,EAAO,kBAAkBlF,KAAK,MAAM;AAAA,IAAA,GAE7CF;AAAA,MACE,MAAMf,EAAM;AAAA,MACZ,CAACiB,MAAMkF,EAAO,qBAAqBlF,KAAK,MAAM;AAAA,IAAA,GAGhDgB,EAAgBkE,EAAO,OAAO,KAAKA,CAAM,CAAC,GAEnC,MAAM,CAACjE,EAAE,OAAOY,EAAM,UAAUA,EAAM,QAAQ,CAAE,CAAA,IAAI,MAAS,CAAC;AAAA,EACvE;AACF,CAAC,GC5E4BuD,KAAgB,gBAAAvG,EAAA;AAAA,EAC3C,MAAO;AAAA,EACP,OAAO,CAAC,QAAQ,OAAO;AAAA,EACvB,OAAO;AAAA,IACL,aAAa;AAAA,MACX,MAAM,CAAE,QAAQ,KAAM;AAAA,MACtB,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,QAAQ,QAAQ,KAAK;AAAA,MAC5B,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAME,GAAO,EAAE,OAAA8C,GAAO,MAAAsC,KAAQ;AACtB,UAAA/H,IAAMkF,EAAOjG,CAAS,GACtB6J,IAAS5D,EAAO1F,EAAY,GAC5ByJ,IAAOhG,KAEPc,IAAqB,OAAO,KAAKpB,CAAK,EACzC,OAAO,CAAAqB,MAAQrB,EAAeqB,CAAI,MAAM,UAAalE,EAAO,kBAAkB,QAAQkE,CAAyB,MAAM,EAAE,EACvH,OAAO,CAACtE,GAAKsE,OAClBtE,EAAasE,CAAI,IAAIC,EAAOtB,EAAeqB,CAAI,CAAC,GAC1CtE,IACC,CAAE,CAAA,GAEDwJ,IAAQ,IAAIC,GAAMpF,CAAI;AAExB,WAAA+E,KAAUA,EAAO,QACZA,EAAA,MAAM,SAASI,CAAK,IAClBvG,EAAM,eAAe3C,KAC9BkJ,EAAM,UAAUvG,EAAM,WAAW,EAAE,MAAM3C,EAAI,KAAM,GAGjD2C,EAAM,QACFuG,EAAA,QAAQvG,EAAM,IAAI,GAG1BuG,EAAM,GAAG,QAAQ,MAAMnB,EAAK,MAAM,CAAC,GACnCmB,EAAM,GAAG,SAAS,MAAMnB,EAAK,OAAO,CAAC,GAErCrE,EAAM,MAAMf,EAAM,aAAa,CAACiB,MAAM;AAAE,MAAIA,KAAKsF,EAAM,UAAUtF,CAAC;AAAA,IAAE,CAAG,GACjEF,EAAA,MAAMf,EAAM,MAAM,CAAAiB,MAAKsF,EAAM,QAAQtF,KAAK,EAAE,CAAC,GACnDF,EAAM,MAAMf,EAAM,QAAQ,OAAKuG,EAAM,UAAUtF,CAAC,CAAC,GACjDF,EAAM,MAAMf,EAAM,UAAU,OAAKuG,EAAM,YAAYtF,CAAC,CAAC,GAErDe,GAAU,MAAM;AACd,MAAIsE,EAAK,SAAS,CAACtG,EAAM,QACjBuG,EAAA,cAAcD,EAAK,KAAM;AAAA,IACjC,CACD,GAEM,MAAM;AAAA,MACXpE,EAAE,OAAO,EAAC,KAAKoE,EAAO,GAAAxD,EAAM,UAAUA,EAAM,QAAQ,IAAI,MAAS;AAAA,IAAA;AAAA,EAErE;AACF,CAAC;AC9FM,MAAM2D,EAAoB;AAAA,EAA1B;AAEE,IAAAhJ,EAAA,6CAAsB;;EAE9B,uBAAuBiJ,GAAYjF,GAAqC;AAClE,SAAA,gBAAgB,IAAIiF,GAAIjF,CAAO;AAAA,EACrC;AAAA,EAEA,yBAAyBiF,GAAY;AAC/B,SAAA,gBAAgB,OAAOA,CAAE;AAAA,EAC/B;AAAA,EAEA,UAAU;AACT,SAAK,gBAAgB,QAAQ,CAACxE,MAAMA,EAAG,CAAA;AAAA,EACxC;AAED;ACfO,MAAMyE,IAAN,MAAMA,EAAU;AAAA,EAItB,OAAO,cAAkDC,GAAc5G,GAAe6G,GAA+B;AAEpH,WAAO,OAAO,KAAK7G,CAAK,EACnB,OAAO,CAAAqB,MAAQrB,EAAeqB,CAAI,MAAM,UAAawF,EAAW,QAAQxF,CAAU,MAAM,EAAE,EAC1F,OAAO,CAACtE,GAAKsE,OACZtE,EAAasE,CAAI,IAAIC,EAAOtB,EAAeqB,CAAI,CAAC,GAC1CtE,IACL,EAAE,MAAA6J,EAAA,CAAW;AAAA,EAErB;AAAA,EAEA,OAAO,aAA+BE,GAAc1E,GAAwC;AAErF,UAAA2E,IAAW,OAAO3E,KAAW,UAChCrE,IAAW,OAAO+I,CAAI,KAAKC,IAAW3E,IAAS;AAClD,QAAI4E,IAAaL,EAAU,KAAK,IAAI5I,CAAG;AACvC,WAAKiJ,MACAA,IAAA1G,EAAIyG,IAAW,OAAO,MAAS,GACzBJ,EAAA,KAAK,IAAI5I,GAAKiJ,CAAC,IAEnBA;AAAA,EAER;AAED;AA1BCvJ,EAFYkJ,GAEY,QAAO,oBAAI;AAF7B,IAAMM,IAANN;ACGA,SAASO,EACf9E,GACApC,GACA4G,GACAC,GACAM,GACC;AAEK,QAAA9J,IAAWkF,EAAOjG,CAAS,GAC9BiE,IAAWgC,EAAOhG,CAAc,GAChCmE,IAAW6B,EAAO3F,EAAa;AAElC,WAASwK,IAAY;AACpB,IAAI7G,EAAS,UACRlD,EAAA,MAAO,UAAU2C,EAAM,UAAUiH,EAAU,cAAyBL,GAAM5G,GAAO6G,CAAU,CAAwB,GACvHzE,EAAO,QAAQ/E,EAAI,MAAO,UAAU2C,EAAM,QAAQ;AAAA,EAEpD;AAEA,WAASqH,IAAc;AACtB,IAAAjF,EAAO,QAAQ;AAAA,EAChB;AAEA,SAAArB,EAAMR,GAAU6G,GAAW,EAAE,WAAW,GAAM,CAAA,GAC1C/J,EAAA,MAAO,GAAG,cAAc+J,CAAS,GAC7B1G,EAAA,GAAG,iBAAiB2G,CAAW,GAEhCpF,EAAgB,MAAM;AAC5B,IAAI1B,EAAS,UACZ4G,EAAS,QAAQ,GACb9J,EAAA,MAAO,aAAa2C,EAAM,QAAQ,IAEnC3C,EAAA,MAAO,IAAI,cAAc+J,CAAS,GAC9B1G,EAAA,IAAI,iBAAiB2G,CAAW;AAAA,EAAA,CACxC;AAEF;AClCA,MAAMR,KAAa7J,EAA4C;AAAA,EAC9D,SAAa;AAAA,EACb,QAAa;AAAA,EACb,aAAa;AACd,CAAC,GAE4BsK,KAAgB,gBAAAxH,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,aAAa;AAAA,IACb,SAAa;AAAA,IACb,QAAa,CAAE,QAAQ,MAAO;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAA2BM,GAAKvH,EAAM,QAAQ,GACnEmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAqC9E,GAAQpC,GAAO,UAAU6G,IAAYM,CAAQ,GAElFpG,EAAMC,EAAMhB,GAAO,aAAa,GAAG,CAAKiB,MAAA;;AACvC,MAAIA,OACI/C,IAAAkE,EAAA,UAAA,QAAAlE,EAAO,eAAe+C;AAAA,IAC9B,CACA,GAEM,MAAM;AAAA,MACZ+B,EAAmB,eAAe;AAAA,MAClCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GCzCK+D,KAAa7J,EAA6C;AAAA,EAC/D,MAAmB;AAAA,EACnB,SAAmB;AAAA,EACnB,aAAmB;AAAA,EACnB,QAAmB;AAAA,EACnB,WAAmB;AAAA,EACnB,SAAmB;AAAA,EACnB,eAAmB;AAAA,EACnB,gBAAmB;AAAA,EACnB,kBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,aAAmB;AAAA,EACnB,YAAmB;AAAA,EACnB,WAAmB;AAAA,EACnB,QAAmB;AACpB,CAAC,GAG4BwK,KAAgB,gBAAA1H,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAmB;AAAA,MAClB,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,MAAmB,CAAE,QAAQ,MAAO;AAAA,IACpC,SAAmB;AAAA,IACnB,aAAmB;AAAA,IACnB,QAAmB;AAAA,IACnB,WAAmB;AAAA,IACnB,SAAmB,CAAE,QAAQ,OAAQ;AAAA,IACrC,eAAmB;AAAA,IACnB,gBAAmB;AAAA,IACnB,kBAAmB;AAAA,IACnB,mBAAmB;AAAA,IACnB,aAAmB;AAAA,IACnB,YAAmB;AAAA,IACnB,WAAmB,CAAE,QAAQ,MAAO;AAAA,IACpC,QAAmB,CAAE,OAAO,QAAQ,MAAO;AAAA,EAC5C;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAA4BM,GAAKvH,EAAM,QAAQ,GACpEmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAgC9E,GAAQpC,GAAO,WAAW6G,IAAYM,CAAQ,GAE9EpG,EAAMC,EAAMhB,GAAO,MAAM,GAAG,CAAAiB,MAAA;;AAAK,cAAA/C,IAAAkE,EAAO,UAAP,gBAAAlE,EAAc,QAAQ+C,KAAK,EAAE,MAAM,qBAAqB,UAAU,CAAA,EAAI;AAAA,KAAC,GAEjG,MAAM;AAAA,MACZ+B,EAAmB,gBAAgB;AAAA,MACnCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GC5DK+D,KAAa7J,EAA2C;AAAA,EAC7D,KAAa;AAAA,EACb,aAAa;AACd,CAAC,GAE4ByK,KAAgB,gBAAA3H,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,KAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAA0BM,GAAKvH,EAAM,QAAQ,GAClEmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAoC9E,GAAQpC,GAAO,SAAS6G,IAAYM,CAAQ,GAEhFpG,EAAMC,EAAMhB,GAAO,aAAa,GAAG,CAAKiB,MAAA;;AACvC,MAAIA,OACI/C,IAAAkE,EAAA,UAAA,QAAAlE,EAAO,eAAe+C;AAAA,IAC9B,CACA,GAEM,MAAM;AAAA,MACZ+B,EAAmB,cAAc;AAAA,MACjCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GCxCK+D,KAAa7J,EAA4C;AAAA,EAC9D,KAAa;AAAA,EACb,OAAa;AAAA,EACb,QAAa;AAAA,EACb,SAAa;AAAA,EACb,SAAa;AAAA,EACb,UAAa;AAAA,EACb,QAAa;AAAA,EACb,aAAa;AAAA,EACb,UAAa;AACd,CAAC,GAE4B0K,KAAgB,gBAAA5H,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,KAAa;AAAA,IACb,OAAa;AAAA,IACb,QAAa;AAAA,IACb,SAAa;AAAA,IACb,SAAa;AAAA,IACb,UAAa;AAAA,IACb,QAAa;AAAA,IACb,aAAa;AAAA,IACb,UAAa;AAAA,EACd;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAA+BM,GAAKvH,EAAM,QAAQ,GACvEmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAqC9E,GAAQpC,GAAO,UAAU6G,IAAYM,CAAQ,GAE3E,MAAM;AAAA,MACZnE,EAAmB,eAAe;AAAA,MAClCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GC9CK+D,KAAa7J,EAA+C;AAAA,EACjE,KAAa;AAAA,EACb,OAAa;AAAA,EACb,QAAa;AAAA,EACb,SAAa;AAAA,EACb,SAAa;AAAA,EACb,UAAa;AAAA,EACb,aAAa;AAAA,EACb,UAAa;AAAA,EACb,UAAa;AACd,CAAC,GAG4B2K,KAAgB,gBAAA7H,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,KAAa;AAAA,IACb,OAAa;AAAA,IACb,QAAa;AAAA,IACb,SAAa;AAAA,IACb,SAAa;AAAA,IACb,UAAa;AAAA,IACb,aAAa;AAAA,IACb,UAAa;AAAA,IACb,UAAa;AAAA,EACd;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAAkCM,GAAKvH,EAAM,QAAQ,GAC1EmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAwC9E,GAAQpC,GAAO,cAAc6G,IAAYM,CAAQ,GAElF,MAAM;AAAA,MACZnE,EAAmB,kBAAkB;AAAA,MACrCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GChDK+D,KAAa7J,EAA4C;AAAA,EAC9D,KAAa;AAAA,EACb,OAAa;AAAA,EACb,QAAa;AAAA,EACb,QAAa;AAAA,EACb,SAAa;AAAA,EACb,SAAa;AAAA,EACb,aAAa;AAAA,EACb,WAAa;AAAA,EACb,UAAa;AACd,CAAC,GAE4B4K,KAAgB,gBAAA9H,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,KAAa;AAAA,IACb,OAAa;AAAA,IACb,QAAa;AAAA,IACb,QAAa;AAAA,IACb,SAAa;AAAA,IACb,SAAa;AAAA,IACb,aAAa;AAAA,IACb,WAAa,CAAE,QAAQ,MAAO;AAAA,IAC9B,UAAa;AAAA,EACd;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAA+BM,GAAKvH,EAAM,QAAQ,GACvEmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAqC9E,GAAQpC,GAAO,UAAU6G,IAAYM,CAAQ,GAE5EpG,EAAAC,EAAMhB,GAAO,OAAO,GAAG,CAAAiB;;AAAK,cAAA/C,IAAAkE,EAAO,UAAP,gBAAAlE,EAAc,SAAS+C,KAAK,CAAA;AAAA,KAAG,GAC3DF,EAAAC,EAAMhB,GAAO,KAAK,GAAG,CAAAiB;;AAAK,cAAA/C,IAAAkE,EAAO,UAAP,gBAAAlE,EAAc,OAAO+C,KAAK;AAAA,KAAG,GAEtD,MAAM;AAAA,MACZ+B,EAAmB,eAAe;AAAA,MAClCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GClDK+D,KAAa7J,EAA2C;AAAA,EAC7D,MAAa;AAAA,EACb,aAAa;AACd,CAAC,GAE4B6K,KAAgB,gBAAA/H,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,UAAa;AAAA,MACZ,MAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,MAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA,OAAO;AAAA,EACP,MAAME,GAAO,EAAE,OAAA8C,KAAS;AAEvB,UAAMyE,IAAWhF,EAAO9F,CAAiB,GACtC2F,IAAW6E,EAAU,aAA0BM,GAAKvH,EAAM,QAAQ,GAClEmH,IAAW,IAAIV,EAAoB;AAE9B,WAAA3F,EAAApE,GAAgBsD,EAAM,QAAQ,GACtCc,EAAQnE,GAAqBwK,CAAQ,GAErCD,EAAoC9E,GAAQpC,GAAO,SAAS6G,IAAYM,CAAQ,GAEhFpG,EAAMC,EAAMhB,GAAO,aAAa,GAAG,CAAKiB,MAAA;;AACvC,MAAIA,OACI/C,IAAAkE,EAAA,UAAA,QAAAlE,EAAO,eAAe+C;AAAA,IAC9B,CACA,GAEM,MAAM;AAAA,MACZ+B,EAAmB,cAAc;AAAA,MACjCZ,EAAO,SAASU,EAAM,UAAUA,EAAM,QAAQ,CAAA,CAAE,IAAI;AAAA,IAAA;AAAA,EAGtD;AACD,CAAC,GC9BYgF,IAAN,MAAMA,EAAS;AAAA,EAmCrB,OAAO,aAAqCpB,GAAYE,GAAc5G,GAAYoC,GAAgB;AAE1F,WAAA,OAAO,KAAKpC,CAAK,EACnB,OAAO,CAAQqB,MAAArB,EAAeqB,CAAI,MAAM,UAAayG,EAAS,YAAY,QAAQzG,CAAU,MAAM,EAAE,EACpG,OAAO,CAACtE,GAAKsE,OACZtE,EAAasE,MAAQ,gBAAgB,iBAAiBA,CAAI,IAAIC,EAAOtB,EAAeqB,CAAI,CAAC,GACnFtE,IACL,EAAE,MAAA6J,GAAM,QAAQ5G,EAAM,UAAUoC,GAAQ,IAAAsE,GAAS;AAAA,EAEzD;AAAA,EAEA,OAAO,oBAAoBrJ,GAAU0K,GAAiBC,GAAW;AAE5D,QAACA,EAAG;AAIC,eAAA3I,IAAI,GAAGmC,IAAMsG,EAAS,aAAa,QAAQzI,IAAImC,GAAKnC,KAAK;AACjE,cAAM4I,IAAS,OAAOH,EAAS,aAAczI,CAAE,EAAE,OAAO,CAAC,EAAE,YAAA,IAAgByI,EAAS,aAAczI,CAAE,EAAE,OAAO,CAAC;AAC1G,QAAA2I,EAAG,MAAOC,CAAO,KAChB5K,EAAA,GAAGyK,EAAS,aAAczI,CAAE,GAAG0I,GAASC,EAAG,MAAOC,CAAO,CAAC;AAAA,MAEhE;AAAA,EAED;AAAA,EAEA,OAAO,sBAAsB5K,GAAU0K,GAAiBC,GAAW;AAE9D,QAACA,EAAG;AAIC,eAAA3I,IAAI,GAAGmC,IAAMsG,EAAS,aAAa,QAAQzI,IAAImC,GAAKnC,KAAK;AACjE,cAAM4I,IAAS,OAAOH,EAAS,aAAczI,CAAE,EAAE,OAAO,CAAC,EAAE,YAAA,IAAgByI,EAAS,aAAczI,CAAE,EAAE,OAAO,CAAC;AAC1G,QAAA2I,EAAG,MAAOC,CAAO,KAChB5K,EAAA,IAAIyK,EAAS,aAAczI,CAAE,GAAG0I,GAASC,EAAG,MAAOC,CAAO,CAAC;AAAA,MAEjE;AAAA,EAED;AAED;AA1ECxK,EAFYqK,GAEI,eAEV;AAAA,EACL;AAAA,EAAY;AAAA,EAAO;AAAA,EAAU;AAAA,EAAe;AAAA,EAAW;AAAA,EAAW;AAAA,EAAe;AAAA,EAAU;AAAA,EAAU;AAAA,IAGtGrK,EARYqK,GAQI,gBAA+C;AAAA,EAC9D;AAAA,EAAS;AAAA,EAAY;AAAA,EAAa;AAAA,EAAW;AAAA,EAAa;AAAA,EAAc;AAAA,EAAc;AAAA,EAAa;AAAA,EAAY;AAAA,EAAe;AAAA,EAAc;AAAA,EAC5I;AAAA,IAGDrK,EAbYqK,GAaI,UAAS;AAAA,EACxB,OAAO;AAAA,IACN,SAAa;AAAA,MACZ,MAAM;AAAA,MACN,UAAU;AAAA,IACX;AAAA,IACA,QAAa,CAAE,QAAQ,MAAO;AAAA,IAC9B,UAAa,CAAE,QAAQ,OAAO,QAAQ,MAAO;AAAA,IAC7C,KAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAa;AAAA,IACb,SAAa;AAAA,IACb,aAAa;AAAA,IACb,QAAa;AAAA,IACb,QAAa;AAAA,EACd;AAAA,EACA,OAAO;AAAA,IACN;AAAA,IAAS;AAAA,IAAY;AAAA,IAAa;AAAA,IAAW;AAAA,IAAa;AAAA,IAAc;AAAA,IAAc;AAAA,IAAa;AAAA,IAAY;AAAA,IAAe;AAAA,IAAc;AAAA,IAC5I;AAAA,EACD;AAAA;AAhCK,IAAMI,IAANJ;ACZS,SAAAK,EAAmBJ,GAAiBK,GAAgC;AAE7E,QAAA/K,IAAWkF,EAAOjG,CAAS,GAC9BiE,IAAWgC,EAAOhG,CAAc,GAChC4K,IAAW5E,EAAO5F,CAAmB;AAExC,WAAS0L,IAAc;AACtB,IAAI9H,EAAS,UACR6H,KACHF,EAAS,sBAAsB7K,EAAI,OAAQ0K,GAASK,EAAG,KAAK,GAE/C/K,EAAI,MAAO,SAAS0K,CAAO,KAEpC1K,EAAA,MAAO,YAAY0K,CAAO;AAAA,EAGjC;AAES,EAAAZ,EAAA,uBAAuBY,GAASM,CAAW,GACpDpG,EAAgB,MAAM;AACrB,IAAAkF,EAAS,yBAAyBY,CAAO,GAC7BM;EAAA,CACZ;AAEF;ACtBA,MAA6BC,KAAgB,gBAAAxI,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,mFAAmF;AACxF;AAAA,IACD;AAEA,UAAM5H,IAAYkF,EAAOjG,CAAS,GAC/BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEnE,WAAAJ,EAAmBnI,EAAM,OAAQ,GAE3Be,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,WACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAA2ClI,EAAM,SAAU,cAAcA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS;AAAA,IAClJ,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMgD,EAAmB,kBAAkB;AAAA,EAEnD;AACD,CAAC,GCjC4B2F,KAAgB,gBAAA7I,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,+EAA+E;AACpF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAAuClI,EAAM,SAAU,UAAUA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GACzIkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,cAAc;AAAA,EAE/C;AACD,CAAC,GCnC4B4F,KAAgB,gBAAA9I,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,6EAA6E;AAClF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAAqClI,EAAM,SAAU,QAAQA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GACrIkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,YAAY;AAAA,EAE7C;AACD,CAAC,GCnC4B6F,KAAgB,gBAAA/I,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,qFAAqF;AAC1F;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAA8ClI,EAAM,SAAU,kBAAkBA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GACxJkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,sBAAsB;AAAA,EAEvD;AACD,CAAC,GCnC4B8F,KAAgB,gBAAAhJ,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,gFAAgF;AACrF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAAwClI,EAAM,SAAU,WAAWA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GAC3IkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,eAAe;AAAA,EAEhD;AACD,CAAC,GCnC4B+F,KAAgB,gBAAAjJ,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,kFAAkF;AACvF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAA0ClI,EAAM,SAAU,aAAaA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GAC/IkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,iBAAiB;AAAA,EAElD;AACD,CAAC,GCnC4BgG,KAAgB,gBAAAlJ,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,6EAA6E;AAClF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAAqClI,EAAM,SAAU,QAAQA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GACrIkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,YAAY;AAAA,EAE7C;AACD,CAAC,GCnC4BiG,KAAgB,gBAAAnJ,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,+EAA+E;AACpF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAAuClI,EAAM,SAAU,UAAUA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GACzIkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,cAAc;AAAA,EAE/C;AACD,CAAC,GCnC4BkG,KAAgB,gBAAApJ,EAAA;AAAA,EAC5C,MAAO;AAAA,EACP,OAAO;AAAA,IACN,GAAGoI,EAAS,OAAO;AAAA,IACnB,QAAQ;AAAA,IACR,OAAQ;AAAA,EACT;AAAA,EACA,OAAO,CAAE,GAAGA,EAAS,OAAO,KAAM;AAAA,EAClC,MAAMlI,GAAO;AAEN,UAAAuI,IAAWhG,EAAO7F,CAAc;AAEtC,QAAI,CAAC6L,KAAY,CAACvI,EAAM,QAAQ;AAC/B,MAAAiF,EAAK,+EAA+E;AACpF;AAAA,IACD;AAEM,UAAAmD,IAAYlI,EACf,GAAA7C,IAAYkF,EAAOjG,CAAS,GAC5BiE,IAAYgC,EAAOhG,CAAc,GACjCgL,IAAYhF,EAAO9F,CAAiB,GACpC+L,IAAYvB,EAAU,aAAaM,GAAKvH,EAAM,UAAUuI,CAAQ;AAEhD,WAAAJ,EAAAnI,EAAM,SAAUoI,CAAE,GAE/BrH,EAAA,CAAER,GAAUiI,CAAU,GAAG,CAAC,CAAEC,GAAIC,CAAI,MAAM;AAC3C,MAAAD,MAAOC,KAAOA,MAAQ,YACzBrL,EAAI,MAAO,SAAS6K,EAAS,aAAuClI,EAAM,SAAU,UAAUA,GAAOuI,CAAQ,GAAGvI,EAAM,UAAU,MAAS,GACzIkI,EAAS,oBAAoB7K,EAAI,OAAQ2C,EAAM,SAAUoI,EAAG,KAAK;AAAA,IAClE,GACE,EAAE,WAAW,GAAA,CAAM,GAEf,MAAMpF,EAAmB,cAAc;AAAA,EAE/C;AACD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CCnCKmG,KAAiD,SAA8BC,GAAU;AACvF,SAAA,QAAQC,EAAU,EAAE,QAAQ,CAAC,CAAEC,GAAelM,CAAU,MAAM;AAChE,IAAAgM,EAAA,UAAUE,GAAelM,CAAS;AAAA,EAAA,CACtC;AACF;","x_google_ignoreList":[6]}